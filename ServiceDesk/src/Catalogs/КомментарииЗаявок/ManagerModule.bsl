
Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоляПредставления = Новый Массив;
	ПоляПредставления.Добавить("АвторИзменения");
	ПоляПредставления.Добавить("ДатаИзменения");
	ПоляПредставления.Добавить("АдресатВопроса");	
	ПоляПредставления.Добавить("ПорядковыйНомер");	
	
	Поля = ПоляПредставления;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)	
	СтандартнаяОбработка = Ложь;	
	Если Данные.АдресатВопроса.Пустая() Тогда
		Представление	= "" + Данные.ПорядковыйНомер + " " + Данные.АвторИзменения + "  " + Формат(Данные.ДатаИзменения, "ДФ='dd.MM.yyyy HH:mm'");		
	Иначе		
		Представление	= "" + Данные.ПорядковыйНомер + " " + Данные.АвторИзменения + " " + Символ(8658) + " " + Данные.АдресатВопроса + " " + Формат(Данные.ДатаИзменения, "ДФ='dd.MM.yyyy HH:mm'");
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьСтруктуруДействия(НавигационнаяСсылка) Экспорт  
	
	СтруктураОтвета	= Новый Структура;
	
	СтруктураОтвета.Вставить("ТипДействия", "ОткрытьКомментарий");
	Комментарий	= РаботаСHTML.ПолучитьСсылкуНаОбъектПоНавигационнойСсылке(НавигационнаяСсылка);
		
	Если Комментарий <> Неопределено Тогда
		СтруктураОтвета.Вставить("Комментарий", Комментарий);
		СтруктураОтвета.Вставить("Автор", Комментарий.АвторИзменения);		
	Иначе		
		СтруктураОтвета.Вставить("Комментарий", Справочники.КомментарииЗаявок.ПустаяСсылка());
		СтруктураОтвета.Вставить("Автор", Справочники.Пользователи.ПустаяСсылка());		
	КонецЕсли;
	
	Возврат СтруктураОтвета;
	
КонецФункции

Функция ПолучитьСледующийПорядковыйНомерКомментария(Заявка) Экспорт
	
	ПорядковыйНомер	= 1;
	
	пЗапрос	= Новый Запрос;
	пЗапрос.Текст	= "ВЫБРАТЬ ПЕРВЫЕ 1
	             	  |	КомментарииЗаявок.ПорядковыйНомер КАК ПорядковыйНомер
	             	  |ИЗ
	             	  |	Справочник.КомментарииЗаявок КАК КомментарииЗаявок
	             	  |ГДЕ
	             	  |	КомментарииЗаявок.Заявка = &Заявка
	             	  |
	             	  |УПОРЯДОЧИТЬ ПО
	             	  |	КомментарииЗаявок.ПорядковыйНомер УБЫВ";
	
	пЗапрос.УстановитьПараметр("Заявка", Заявка);
	
	РезультатЗапроса	= пЗапрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда		
		Выборка	= РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ПорядковыйНомер	= Выборка.ПорядковыйНомер + 1;
	КонецЕсли;
	
	Возврат ПорядковыйНомер;
	
КонецФункции

Функция ПолучитьАвтораКомментарияПоНомеру(Заявка, ПорядковыйНомер) Экспорт
	
	Автор	= Справочники.Пользователи.ПустаяСсылка();
	
	пЗапрос	= Новый Запрос;
	пЗапрос.Текст	= "ВЫБРАТЬ ПЕРВЫЕ 1
	             	  |	КомментарииЗаявок.АвторИзменения КАК АвторИзменения
	             	  |ИЗ
	             	  |	Справочник.КомментарииЗаявок КАК КомментарииЗаявок
	             	  |ГДЕ
	             	  |	КомментарииЗаявок.Заявка = &Заявка
	             	  |	И КомментарииЗаявок.ПорядковыйНомер = &ПорядковыйНомер";
	
	пЗапрос.УстановитьПараметр("Заявка", Заявка);
	пЗапрос.УстановитьПараметр("ПорядковыйНомер", ПорядковыйНомер);
	
	РезультатЗапроса	= пЗапрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда		
		Выборка	= РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Автор	= Выборка.АвторИзменения;
	КонецЕсли;
	
	Возврат Автор;
	
КонецФункции

Процедура ДобавитьОбновитьКомментарий(СтруктураПараметров) Экспорт
			
	Если СтруктураПараметров.Комментарий.Пустая() Тогда
		КомментарийОбъект	= Справочники.КомментарииЗаявок.СоздатьЭлемент();
		КомментарийОбъект.Заявка			= СтруктураПараметров.Заявка;
		КомментарийОбъект.ПорядковыйНомер	= ПолучитьСледующийПорядковыйНомерКомментария(СтруктураПараметров.Заявка);		
		КомментарийОбъект.АдресатВопроса	= СтруктураПараметров.АдресатВопроса;
		КомментарийОбъект.Основание			= ?(СтруктураПараметров.Основание = 9999, 0, СтруктураПараметров.Основание);
		КомментарийОбъект.ДляВнутреннегоИспользования = СтруктураПараметров.ДляВнутреннегоИспользования;
	Иначе
		КомментарийОбъект	= СтруктураПараметров.Комментарий.ПолучитьОбъект();	
	КонецЕсли;                         
	
	КомментарийОбъект.АвторИзменения	= СтруктураПараметров.ТекущийПользователь;
	КомментарийОбъект.ДатаИзменения		= ТекущаяДатаСеанса();
	КомментарийОбъект.ОписаниеHTML		= СтруктураПараметров.ТекстHTML;
	
	Для Каждого Вложение Из СтруктураПараметров.Вложения Цикл
		НоваяСтрока = КомментарийОбъект.ВложенныеФайлы.Добавить();		
		НоваяСтрока.ИмяФайла	= Вложение.ИмяФайла;
		НоваяСтрока.Расширение	= Вложение.Расширение;
		НоваяСтрока.Хранилище	= Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Вложение.Адрес), Новый СжатиеДанных(9));	
	КонецЦикла;
	
	КомментарийОбъект.Записать();
	
	Параметры			= Новый Структура;
	ДобавитьОповещение	= Ложь;
	
	СтруктураОтвета		= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(СтруктураПараметров.Заявка);
	ИсполнительЗаявки	= СтруктураПараметров.Заявка.Исполнитель;
	
	Если Истина		
		И СтруктураОтвета.СостояниеЗаявки <> Справочники.СостоянияЗаявки.ОжиданиеОтвета
		И СтруктураПараметров.АдресатВопроса = СтруктураПараметров.Заявка.Заказчик
	Тогда
		ОбщегоНазначенияСервер.ИзменитьСостояниеЗаявки(СтруктураПараметров.Заявка, "ОжиданиеОтвета");
		ДобавитьОповещение	= Истина;
		Параметры.Вставить("Событие", "Ответьте на вопрос по заявке");
		Параметры.Вставить("СобытиеEmail", "ЗадатьВопрос");
		Параметры.Вставить("АдресацияПользователь", СтруктураПараметров.АдресатВопроса);
	ИначеЕсли Истина			
			И СтруктураОтвета.СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета
			И СтруктураПараметров.ТекущийПользователь <> ИсполнительЗаявки
	Тогда
	    ОбщегоНазначенияСервер.ИзменитьСостояниеЗаявки(СтруктураПараметров.Заявка, СтруктураОтвета.СостояниеЗаявкиСтарое);
		ДобавитьОповещение	= Истина;
		Параметры.Вставить("Событие", "Добавлен комментарий");
		Параметры.Вставить("СобытиеEmail", "ОтправитьОповещениеНаПочту");
		Параметры.Вставить("АдресацияПользователь", ИсполнительЗаявки);
	//ИначеЕсли СтруктураПараметров.ТипЗаметки = Перечисления.ТипыЗаметок.Вопрос Тогда
	//	ДобавитьОповещение	= Истина;
	//	Параметры.Вставить("Событие", "Ответьте на вопрос по заявке");
	//	Параметры.Вставить("СобытиеEmail", "ЗадатьВопрос");
	//	Параметры.Вставить("АдресацияПользователь", СтруктураПараметров.АдресатВопроса);
	ИначеЕсли СтруктураПараметров.Основание <> 0 Тогда
		ДобавитьОповещение	= Истина;
		Параметры.Вставить("Событие", "Добавлен комментарий");
		Параметры.Вставить("СобытиеEmail", "ОтправитьОповещениеНаПочту");
		Если СтруктураПараметров.Основание = 9999 Тогда
			Параметры.Вставить("АдресацияПользователь", ИсполнительЗаявки);
		Иначе
			Параметры.Вставить("АдресацияПользователь", ПолучитьАвтораКомментарияПоНомеру(СтруктураПараметров.Заявка, СтруктураПараметров.Основание));
		КонецЕсли;
	ИначеЕсли Не СтруктураПараметров.АдресатВопроса.Пустая() И СтруктураПараметров.ТекущийПользователь <> СтруктураПараметров.АдресатВопроса Тогда
		ДобавитьОповещение	= Истина;
		Параметры.Вставить("Событие", "Ответьте на вопрос по заявке");
		Параметры.Вставить("СобытиеEmail", "ЗадатьВопрос");
		Параметры.Вставить("АдресацияПользователь", СтруктураПараметров.АдресатВопроса);
	КонецЕсли;	
	
	Если ДобавитьОповещение Тогда
		Параметры.Вставить("Заявка", СтруктураПараметров.Заявка);
		Параметры.Вставить("АдресацияРоль", "");
		Параметры.Вставить("Автор", СтруктураПараметров.ТекущийПользователь);
		Параметры.Вставить("ПользовательИБ", Неопределено);
		Параметры.Вставить("ДляВнутреннегоИспользования", СтруктураПараметров.ДляВнутреннегоИспользования);
		ОбщегоНазначенияСервер.ДобавитьОповещениеВФоне(Параметры);
	КонецЕсли; 
	
КонецПроцедуры
