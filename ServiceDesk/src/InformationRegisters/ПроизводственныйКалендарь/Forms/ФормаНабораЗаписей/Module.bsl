
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НомерТекущегоГода = 0 Тогда
		НомерТекущегоГода = Год(ТекущаяДата());
	КонецЕсли;
	
	ДатаКалендаря = Дата(НомерТекущегоГода, 1, 1);
		
	УстановитьИнтервалКалендаря(ДатаКалендаря);
	
	ЦветаВидовДней = Новый ФиксированноеСоответствие(РегистрыСведений.ПроизводственныйКалендарь.ЦветаОформленияВидовДнейПроизводственногоКалендаря());
	
	ПреобразоватьДанныеПроизводственногоКалендаря(РегистрыСведений.ПроизводственныйКалендарь.ДанныеПроизводственногоКалендаря(НомерТекущегоГода));
	
	УстановитьПредставлениеПереносов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИнтервалКалендаря(ДатаУстановки)

	Элементы.ПроизводственныйКалендарь.НачалоПериодаОтображения	= НачалоГода(ДатаУстановки);
	Элементы.ПроизводственныйКалендарь.КонецПериодаОтображения	= КонецГода(ДатаУстановки);

КонецПроцедуры

&НаКлиенте
Процедура ПроизводственныйКалендарьПриВыводеПериода(Элемент, ОформлениеПериода)
	
	ВидДняПроизводственногоКалендаряНеУказанЦвет	= ОбщегоНазначенияКлиент.ЦветСтиля("ВидДняПроизводственногоКалендаряНеУказанЦвет");	
	
	Для Каждого СтрокаОформленияПериода Из ОформлениеПериода.Даты Цикл
		
		ЦветОформленияДня = ЦветаВидовДней.Получить(ВидыДней.Получить(СтрокаОформленияПериода.Дата));
		Если ЦветОформленияДня = Неопределено Тогда
			СтрокаОформленияПериода.ЦветТекста = ВидДняПроизводственногоКалендаряНеУказанЦвет;
		Иначе
			СтрокаОформленияПериода.ЦветТекста = ЦветОформленияДня;
		КонецЕсли;                            
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПреобразоватьДанныеПроизводственногоКалендаря(ДанныеПроизводственногоКалендаря)
	
	// Данные производственного календаря используются в форме 
	// в виде соответствий ВидыДней и ПереносыДней
	// Процедура заполняет эти соответствия
	
	ВидыДнейСоответствие = Новый Соответствие;
	//ПереносыДнейСоответствие = Новый Соответствие;
	
	Для Каждого СтрокаТаблицы Из ДанныеПроизводственногоКалендаря Цикл
		ВидыДнейСоответствие.Вставить(СтрокаТаблицы.ДатаКалендаря, СтрокаТаблицы.ВидДня);
		//Если ЗначениеЗаполнено(СтрокаТаблицы.ДатаПереноса) Тогда
		//	ПереносыДнейСоответствие.Вставить(СтрокаТаблицы.Дата, СтрокаТаблицы.ДатаПереноса);
		//КонецЕсли;
	КонецЦикла;
	
	ВидыДней = Новый ФиксированноеСоответствие(ВидыДнейСоответствие);
	//ПереносыДней = Новый ФиксированноеСоответствие(ПереносыДнейСоответствие);
	//
	//ЗаполнитьПредставлениеПереносов(ЭтотОбъект);
	//
	//Элементы.СписокПереносов.Видимость = СписокПереносов.Количество() > 0;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерТекущегоГодаПриИзменении(Элемент)
	НомерТекущегоГодаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НомерТекущегоГодаПриИзмененииНаСервере()
	
	ДатаКалендаря = Дата(НомерТекущегоГода, 1, 1);
		
	УстановитьИнтервалКалендаря(ДатаКалендаря);
		
	ПреобразоватьДанныеПроизводственногоКалендаря(РегистрыСведений.ПроизводственныйКалендарь.ДанныеПроизводственногоКалендаря(НомерТекущегоГода));
	
	УстановитьПредставлениеПереносов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеПереносов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеренесенныеРабочиеДни.РабочийДень,
	               |	ПеренесенныеРабочиеДни.ВыходнойДень
	               |ИЗ
	               |	РегистрСведений.ПеренесенныеРабочиеДни КАК ПеренесенныеРабочиеДни
	               |ГДЕ
	               |	ПеренесенныеРабочиеДни.Год = &Год";
				   
	Запрос.УстановитьПараметр("Год", НомерТекущегоГода);
	
	ТаблицаПеренесенныхДней = Запрос.Выполнить().Выгрузить();
	ТаблицаПеренесенныхДней.Индексы.Добавить("ВыходнойДень, РабочийДень");
	
	ПредставлениеПереносов = "";
	
	Для Каждого СтрокаТаблицыПеренесенныхДней Из ТаблицаПеренесенныхДней Цикл
	
		ДеньНедели = ДеньНедели(СтрокаТаблицыПеренесенныхДней.ВыходнойДень);
		Если ДеньНедели = 1 или ДеньНедели = 2 или ДеньНедели = 4 Тогда
			СловоПеренесен = " перенесен на ";
		ИначеЕсли ДеньНедели = 7 Тогда
			СловоПеренесен = " перенесено на ";
		Иначе
			СловоПеренесен = " перенесена на ";
		КонецЕсли;
		ПредставлениеПереносов = ПредставлениеПереносов + формат(СтрокаТаблицыПеренесенныхДней.ВыходнойДень, "ДФ = ""д ММММ, дддд""")+
						СловоПеренесен+формат(СтрокаТаблицыПеренесенныхДней.РабочийДень, "ДФ = ""д ММММ, дддд""")+Символы.ПС+Символы.ПС;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзЗУП(Команда)
	
	ОбновитьИзЗУПНаСервере(НомерТекущегоГода);		
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьИзЗУПНаСервере(НомерТекущегоГода)
	
	СтруктураCom = ПроцедурыЗагрузкиДанныхСервер.ПодключитьсяКВИБ(Справочники.БазыДанных.НайтиПоКоду("000000001"));
	
	ТекCOMПодключение	= СтруктураCom.ТекCOMПодключение;
	База				= СтруктураCom.База;
	
	ЗапросCom 		= База.NewObject("Запрос");
	ЗапросCom.Текст =	
		"ВЫБРАТЬ
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря,
		|	РегламентированныйПроизводственныйКалендарь.Год,
		|	РегламентированныйПроизводственныйКалендарь.Пятидневка,
		|	РегламентированныйПроизводственныйКалендарь.Шестидневка,
		|	РегламентированныйПроизводственныйКалендарь.КалендарныеДни,
		|	ПРЕДСТАВЛЕНИЕ(РегламентированныйПроизводственныйКалендарь.ВидДня) КАК ВидДня
		|ИЗ
		|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|ГДЕ
		|	РегламентированныйПроизводственныйКалендарь.Год = &Год";
	
	ЗапросCom.SetParameter("Год", НомерТекущегоГода);// Папка увеленные
	
	Набор	= РегистрыСведений.ПроизводственныйКалендарь.СоздатьНаборЗаписей();
	Набор.Отбор.Год.Установить(НомерТекущегоГода);
	Набор.Очистить();
	
	ВыборкаCom = ЗапросCom.Выполнить().Выбрать();
	Пока ВыборкаCom.Следующий() Цикл
		НСтрока	= Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НСтрока, ВыборкаCom);		
		НСтрока.ВидДня	= Перечисления.ВидыДнейПроизводственногоКалендаря[ВыборкаCom.ВидДня];
	КонецЦикла;
	
	Набор.Записать();
		
	ЗапросCom 		= База.NewObject("Запрос");
	ЗапросCom.Текст =	
		"ВЫБРАТЬ
		|	ПеренесенныеРабочиеДни.Год,
		|	ПеренесенныеРабочиеДни.РабочийДень,
		|	ПеренесенныеРабочиеДни.ВыходнойДень
		|ИЗ
		|	РегистрСведений.ПеренесенныеРабочиеДни КАК ПеренесенныеРабочиеДни
		|ГДЕ
		|	ПеренесенныеРабочиеДни.Год = &Год";
	
	ЗапросCom.SetParameter("Год", НомерТекущегоГода);// Папка увеленные
	
	Набор	= РегистрыСведений.ПеренесенныеРабочиеДни.СоздатьНаборЗаписей();
	Набор.Отбор.Год.Установить(НомерТекущегоГода);
	Набор.Очистить();
	
	ВыборкаCom = ЗапросCom.Выполнить().Выбрать();
	Пока ВыборкаCom.Следующий() Цикл
		НСтрока	= Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НСтрока, ВыборкаCom);				
	КонецЦикла;
	
	Набор.Записать();
	
	ТекCOMПодключение	= Неопределено;
	База				= Неопределено;
	
КонецПроцедуры
