
Функция ВставитьКартинкиВHTML(Знач ФорматированныйДокумент, Знач ТекстHTML) Экспорт
		
	Сч = 1;
	Для Каждого ЭлементФорматированногоДокумента Из ФорматированныйДокумент.Элементы Цикл		
		Для Каждого ПараграфФорматированногоДокумента Из ЭлементФорматированногоДокумента.Элементы Цикл
			Если ТипЗнч(ПараграфФорматированногоДокумента) = Тип("КартинкаФорматированногоДокумента") Тогда
				Ключ 	= "image" + Прав("000" + Сч, 3);
				ТекстHTML	= СтрЗаменить(ТекстHTML, Ключ, ПараграфФорматированногоДокумента.Картинка);
				Сч = Сч + 1;
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;
	
	Возврат ТекстHTML;
	
КонецФункции 

Функция ПолучитьТелоHTML(Знач ТекстHTML) Экспорт
	
	НачалоТела	= "<body";	
	КонецТела	= "</body>";
	
	ПозицияНачалоТела	= Найти(ТекстHTML, НачалоТела);	
	ПозицияКонецТела	= Найти(ТекстHTML, КонецТела);
	
	Если ПозицияНачалоТела > 0 Тогда 
		
		Сдвиг = 5;
		
		Пока ПозицияНачалоТела + Сдвиг < ПозицияКонецТела Цикл
			Если КодСимвола(ТекстHTML, ПозицияНачалоТела + Сдвиг) = 62 Тогда    //62
				Прервать;
			КонецЕсли;
			Сдвиг = Сдвиг + 1;
		КонецЦикла;
		
		Сдвиг = Сдвиг + 1;
		
		Начало		= ПозицияНачалоТела + Сдвиг;
		Количество	= ПозицияКонецТела - Начало;
		
		ТекстHTML	= СокрЛП(Сред(ТекстHTML, Начало, Количество));
		
	КонецЕсли;

	Возврат ТекстHTML;
	
КонецФункции

Функция ПолучитьТелоHTMLИзОтвета(Знач ТекстHTML) Экспорт
	
	НачалоТела	= "<body";	
	КонецТела	= "href";
	
	ПозицияНачалоТела	= Найти(ТекстHTML, НачалоТела);	
	ПозицияКонецТела	= Найти(ТекстHTML, КонецТела);
	
	Если ПозицияНачалоТела > 0 Тогда 
		
		Сдвиг = 5;
		
		Пока ПозицияНачалоТела + Сдвиг < ПозицияКонецТела Цикл
			Если КодСимвола(ТекстHTML, ПозицияНачалоТела + Сдвиг) = 62 Тогда    //62
				Прервать;
			КонецЕсли;
			Сдвиг = Сдвиг + 1;
		КонецЦикла;
		
		Сдвиг = Сдвиг + 1;
		
		СдвигКонца = 1;
		Пока ПозицияКонецТела - СдвигКонца > ПозицияНачалоТела Цикл
			Если КодСимвола(ТекстHTML, ПозицияКонецТела - СдвигКонца) = 62 Тогда    //62
				Прервать;
			КонецЕсли;
			СдвигКонца = СдвигКонца + 1;
		КонецЦикла;
		
		СдвигКонца = СдвигКонца - 1;
		
		ТекстHTML	= СокрЛП(Сред(ТекстHTML, ПозицияНачалоТела + Сдвиг, ПозицияКонецТела - СдвигКонца - ПозицияНачалоТела - Сдвиг));	
		
	КонецЕсли;
	
	Возврат ТекстHTML;
	
КонецФункции

Функция ПолучитьHTMLИзФорматированногоДокумента(Знач ФорматированныйДокумент) Экспорт
	
	ТекстHTML	= "";
	Вложения	= Новый Структура;
	ФорматированныйДокумент.ПолучитьHTML(ТекстHTML, Вложения);
		
	ТекстHTML	= РаботаСHTML.ВставитьКартинкиВHTML(ФорматированныйДокумент, ТекстHTML);
	ТекстHTML	= РаботаСHTML.ПолучитьТелоHTML(ТекстHTML);		
	
	Возврат ТекстHTML;
	
КонецФункции

Функция ПолучитьHTMLИзКомментария(Знач Комментарий) Экспорт
	
	НачалоHTML	= "<html>
						|<head>
						|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
						|<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
						|<meta name=""format-detection"" content=""telephone=no"" />
						|<style type=""text/css"">
						|body{margin:0;padding:8px;}
						|p{line-height:1.15;margin:0;white-space:pre-wrap;}
						|ol,ul{margin-top:0;margin-bottom:0;}
						|img{border:none;}
						|li>p{display:inline;}
						|</style>
						|</head>
						|<body>";
	
	КонецHTML	= "</body></html>";
	
	
	Возврат НачалоHTML + Комментарий.ОписаниеHTML + КонецHTML;
	
КонецФункции

Функция ПолучитьОписаниеHTML_ПоВыборке(Выборка, ДляЭлектроннойПочты = Ложь)
	
	ОписаниеHTML_Тело	= "";
	
	Пока Выборка.Следующий() Цикл
		НавигационнаяСсылка	= ПолучитьНавигационнуюСсылку(Выборка.Ссылка);
				
		ТегКомментария	= "<a " + ?(ДляЭлектроннойПочты, "style=""color:#14A850; font-size:12px""", "") + "class=""list"" name=""" + Выборка.ПорядковыйНомер + """ href=""" + НавигационнаяСсылка + """><strong>" + Выборка.Ссылка + "</strong></a>";
		Если Выборка.Основание > 0 Тогда
			ТегОснования	= "<a " + ?(ДляЭлектроннойПочты, "style=""color:#14A850; font-size:12px""", "") + "class=""list"" name=""Основание"" href=""#" + Выборка.Основание + """><strong>" + " (" + Выборка.Основание + ") " + "</strong></a>";
		Иначе
			ТегОснования	= "";
		КонецЕсли;
		ТегСсылки		= ТегКомментария + " " + ТегОснования + "<br>";		
		ОписаниеHTML_Тело	= ОписаниеHTML_Тело + "<div class=""myClass"" id = """ + Выборка.ПорядковыйНомер + """>" + ТегСсылки + Выборка.ОписаниеHTML + "</div>";		
	КонецЦикла;
	
	Возврат ОписаниеHTML_Тело;
	
КонецФункции
	
Функция ПолучитьHTMLИзЗаявки(Знач Заявка, ДляЭлектроннойПочты = Ложь) Экспорт
	
	СтруктураОтвета	= Новый Структура();
		
	ОписаниеHTML_Заголовок	= "<html>
						|<head>
						|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
						|<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
						|<meta name=""format-detection"" content=""telephone=no"" />
						|<BASE href=""."">
						|<style type=""text/css"">
						|body{margin:0;padding:8px;}
						|a.list:link{
						|			color: rgb(20,168,80); 
						|			text-decoration: none;						
						|			font-weight:bold;
						|			font-size:12px;						
						|			}
						|a.list:visited {
						|			color: rgb(20,168,80); 
						|			text-decoration: none;
						|			}
						|a.list:hover{
						|			color: rgb(20,168,80); 
						|			text-decoration: underline;
						|			}
						|p{line-height:1.15;margin:0;white-space:pre-wrap;}
						|ol,ul{margin-top:0;margin-bottom:0;}
						|img{border:none;}
						|div{margin-top:7px}						
						|</style>
						|</head>
						|<body>";
	
	ОписаниеHTML_Подвал	= "</body></html>";
	
	пЗапрос	= Новый Запрос;
	пЗапрос.Текст	= "ВЫБРАТЬ
	             	  |	КомментарииЗаявок.Ссылка КАК Ссылка,
	             	  |	КомментарииЗаявок.ОписаниеHTML КАК ОписаниеHTML,
	             	  |	КомментарииЗаявок.ПорядковыйНомер КАК ПорядковыйНомер,
	             	  |	КомментарииЗаявок.Основание КАК Основание
	             	  |ИЗ
	             	  |	Справочник.КомментарииЗаявок КАК КомментарииЗаявок
	             	  |ГДЕ
	             	  |	КомментарииЗаявок.Заявка = &Заявка
	             	  |	И КомментарииЗаявок.ДляВнутреннегоИспользования = &ДляВнутреннегоИспользования
	             	  |
	             	  |УПОРЯДОЧИТЬ ПО
	             	  |	КомментарииЗаявок.Ссылка УБЫВ";
	
	пЗапрос.УстановитьПараметр("Заявка", Заявка);
	пЗапрос.УстановитьПараметр("ДляВнутреннегоИспользования", Ложь);
	
	Выборка	= пЗапрос.Выполнить().Выбрать();
	СтруктураОтвета.Вставить("КоличествоКомментариев", Выборка.Количество());		
	ОписаниеHTML_Тело	= ПолучитьОписаниеHTML_ПоВыборке(Выборка, ДляЭлектроннойПочты);		
	СтруктураОтвета.Вставить("ОписаниеHTML", ОписаниеHTML_Заголовок + ОписаниеHTML_Тело + ОписаниеHTML_Подвал);
	
	Если РольДоступна("Пользователь") Тогда
		СтруктураОтвета.Вставить("КоличествоКомментариевРазработчика", 0);
		СтруктураОтвета.Вставить("ОписаниеРазработчикаHTML", "");
	Иначе				
		пЗапрос.УстановитьПараметр("ДляВнутреннегоИспользования", Истина);		
		Выборка	= пЗапрос.Выполнить().Выбрать();
		СтруктураОтвета.Вставить("КоличествоКомментариевРазработчика", Выборка.Количество());		
		ОписаниеHTML_Тело	= ПолучитьОписаниеHTML_ПоВыборке(Выборка, ДляЭлектроннойПочты);		
		СтруктураОтвета.Вставить("ОписаниеРазработчикаHTML", ОписаниеHTML_Заголовок + ОписаниеHTML_Тело + ОписаниеHTML_Подвал);		
	КонецЕсли;

	Возврат	СтруктураОтвета;
	
КонецФункции

Функция ПолучитьHTMLВложенияКомментария(Знач Комментарий) Экспорт
		
	ОписаниеHTML_Заголовок	= "<html>
						|<head>
						|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
						|<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"" />
						|<meta name=""format-detection"" content=""telephone=no"" />
						|<style type=""text/css"">
						|body{margin:0;padding:8px;}
						|a.list:link{
						|			color: black;
						|			font-family: Calibri;
						|			text-decoration: none;
						|			font-weight:normal;
						|			font-size:14px;
						|			border: 0.5px solid silver;
						|			border-style: solid;
						|			padding: 5px;
						|			}
						|a.list:visited {
						|			color: silver;
						|			text-decoration: none;
						|			}
						|a.list:hover{
						|			color: black;
						//|			text-decoration: underline;
						|			text-decoration: none;
						|			background: Gainsboro;
						|			}
						|a[href $='.pdf'] {
						|			padding-left: 18px;
						|			background-position: 0 0;
						|			background: transparent url(data:image/png;base64," + Base64Строка(БиблиотекаКартинок.Pdf.ПолучитьДвоичныеДанные()) + ") no-repeat;
						|			}
						|p{line-height:1.15;margin:0;white-space:pre-wrap;}
						|ol,ul{margin-top:0;margin-bottom:0;}
						|img{border:none;}
						|div{margin-top:7px}
						|</style>
						|</head>
						|<body>";
		
	ОписаниеHTML_Подвал	= "</body></html>";
	
	пЗапрос	= Новый Запрос;
	пЗапрос.Текст	= "ВЫБРАТЬ
	             	  |	КомментарииЗаявокВложенныеФайлы.ИмяФайла КАК ИмяФайла,
	             	  |	КомментарииЗаявокВложенныеФайлы.НомерСтроки - 1 КАК Индекс,
	             	  |	КомментарииЗаявокВложенныеФайлы.Расширение КАК Расширение
	             	  |ИЗ
	             	  |	Справочник.КомментарииЗаявок.ВложенныеФайлы КАК КомментарииЗаявокВложенныеФайлы
	             	  |ГДЕ
	             	  |	КомментарииЗаявокВложенныеФайлы.Ссылка = &Комментарий";
	
	пЗапрос.УстановитьПараметр("Комментарий", Комментарий);	
	
	Выборка	= пЗапрос.Выполнить().Выбрать();
			
	ОписаниеHTML_Тело	= "<div class=""myClass"">";
	
	Пока Выборка.Следующий() Цикл		
		ТегСсылки		= "<a class=""list"" name=""ВложенныйФайл"" href=""" + Выборка.Индекс + Выборка.Расширение + """>" + Выборка.ИмяФайла + "</a>" + "  ";
		ОписаниеHTML_Тело	= ОписаниеHTML_Тело + ТегСсылки;
	КонецЦикла;	
	
	ОписаниеHTML_Тело	= ОписаниеHTML_Тело + "</div>";
			
	Возврат	ОписаниеHTML_Заголовок + ОписаниеHTML_Тело + ОписаниеHTML_Подвал;
	
КонецФункции

Функция ПолучитьСсылкуНаОбъектПоНавигационнойСсылке(Источник) Экспорт
	
	Результаты = СтрРазделить(Источник, "/");
	Для Каждого Результат Из Результаты Цикл
		Если Найти(Результат, "?") > 0 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Результат = СтрРазделить(Результат, "?");
	
	Если Результат.Количество() > 0 Тогда		
		МетаданныеОбъекта = СтрРазделить(Результат[0], ".");
		Результат = Сред(Результат[1], 5);
		Результат = Новый УникальныйИдентификатор(Прав(Результат, 8) + "-" + Сред(Результат, 21, 4) + "-" + Сред(Результат, 17, 4) + "-" + Лев(Результат, 4) + "-" + Сред(Результат, 5, 12));
		
		Если МетаданныеОбъекта[0] = "Документ" Тогда			
			Возврат Документы[МетаданныеОбъекта[1]].ПолучитьСсылку(Результат);			
		ИначеЕсли МетаданныеОбъекта[0] = "Справочник" Тогда
			Возврат Справочники[МетаданныеОбъекта[1]].ПолучитьСсылку(Результат);			
		КонецЕсли;		
	КонецЕсли;	
		
	Возврат Неопределено;
	
КонецФункции
