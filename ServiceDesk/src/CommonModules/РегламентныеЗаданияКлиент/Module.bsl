

////////////////////////////////////////////////////////////////////////////////
// МЕТОДЫ РАСШИРЕНИЯ МЕНЕДЖЕРА РЕГЛАМЕНТНЫХ ЗАДАНИЙ
//

// Функция ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий() запускает новый сеанс,
// обрабатывающий регламентные задания.
//  Только для тонкого и обычного клиентов (Web не поддерживается).
//
// Возвращаемое значение:
//  Структура
//    Отказ             - Булево.
//    ОписаниеОшибки    - Строка.
// 
Функция ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий() Экспорт

	Параметры = РегламентныеЗаданияПолныеПрава.ПараметрыОткрытияСеансаОбработкиРегламентныхЗаданий(Ложь);

	Если Не Параметры.Отказ И Параметры.ТребуетсяОткрытьОтдельныйСеанс Тогда
		ПопыткаОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий(Параметры);
	КонецЕсли;

	Возврат Параметры;

КонецФункции // ОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий()

// Процедура ПопыткаОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий()
// делает попытку открытия нового сеанса, обрабатывающего регламентные задания.
//
// Параметры:
//  Параметры    - Структура, используемые свойства:
//                   СтрокаЗапуска            - Строка.
//                   Отказ                    - Булево, выходной параметр.
//                   ОписаниеОшибки           - Строка, выходной параметр.
// 
// Возвращаемое значение:
//  Булево - равно НЕ Отказ.
//
Процедура ПопыткаОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий(Знач Параметры)

#Если Не ВебКлиент Тогда
	Попытка
		Параметры.ВыполненаПопыткаОткрытия = Истина;
		ЗапуститьПриложение(Параметры.СтрокаЗапуска, КаталогПрограммы());
	Исключение
		Параметры.ОписаниеОшибки = ОписаниеОшибки();
		Параметры.Отказ = Истина;
	КонецПопытки;
#Иначе
		Параметры.Отказ = Истина;
		Параметры.ОписаниеОшибки = НСтр("ru = 'Обработка регламентных заданий в
							  |отдельном сеансе веб-клиента невозможна!
							  |
							  |Для обработки регламентных заданий, необходимо,
							  |чтобы администратор настроил запуск обычного
							  |или тонкого клиента на веб-сервере!'");
#КонецЕсли
		Параметры.ОписаниеОшибки = ?(ПустаяСтрока(Параметры.ОписаниеОшибки), "",
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Ошибка открытия сеанса обработки регламентных заданий:
																	 |
																	 |%1'"), Параметры.ОписаниеОшибки));

КонецПроцедуры // ПопыткаОткрытьОтдельныйСеансОбработкиРегламентныхЗаданий()

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ
//

// Процедура ПриОшибкеОбработкиРегламентныхЗаданий вызывается
// из процедуры РегламентныеЗаданияГлобальный.УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий()
// и РегламентныеЗаданияКлиент.ПриНачалеРаботыСистемы().
//  Вызов происходит, если обнаружено, что что-то не так в обработке регламентных заданий:
// нет сеанса обработки, "висит" сеанс, сеанс долго "не работает".
//
Процедура ПриОшибкеОбработкиРегламентныхЗаданий(ОписаниеОшибки) Экспорт

	ПоказатьОповещениеПользователя(НСтр("ru = 'Не обрабатываются регламентные задания!'"), , ОписаниеОшибки,
		БиблиотекаКартинок.ОшибкаОбработкиРегламентныхЗаданий);

КонецПроцедуры

// Процедура ПодключитьГлобальныйОбработчикОжидания() применяется
// из экранных форм, т.к. в модуле формы метод переопределен.
//
Процедура ПодключитьГлобальныйОбработчикОжидания(ИмяПроцедуры, Интервал, Однократно = Ложь) Экспорт

	ПодключитьОбработчикОжидания(ИмяПроцедуры, Интервал, Однократно);

КонецПроцедуры

// Процедура ОтключитьГлобальныйОбработчикОжидания() применяется
// из экранных форм, т.к. в модуле формы метод переопределен.
//
Процедура ОтключитьГлобальныйОбработчикОжидания(ИмяПроцедуры) Экспорт

	ОтключитьОбработчикОжидания(ИмяПроцедуры);

КонецПроцедуры