
Функция ПолучитьРодительскиеДокументы(Заявка) Экспорт
	Если Заявка.Основание.Пустая() Тогда
		МассивДокументов	= Новый Массив;
	Иначе
		МассивДокументов	= ПолучитьРодительскиеДокументы(Заявка.Основание);
		МассивДокументов.Добавить(Заявка.Основание);
	КонецЕсли;
	Возврат МассивДокументов;
КонецФункции

Функция СформироватьДеревоДокументов(ЭтаФорма) Экспорт
	
	Объект				= ЭтаФорма.Объект;
	ДеревоДокументов	= ЭтаФорма.ДеревоДокументов;
	
	ДеревоДокументов.ПолучитьЭлементы().Очистить();		
	МассивРодительскихДокументов	= ЗаявкаПользователя.ПолучитьРодительскиеДокументы(Объект.Ссылка);
	
	ЭлементДерева	= ДеревоДокументов.ПолучитьЭлементы().Добавить();	
	Для Каждого Документ Из МассивРодительскихДокументов Цикл
		ЭлементДерева.Заявка	= Документ;
		ЭлементДерева			= ЭлементДерева.ПолучитьЭлементы().Добавить();
	КонецЦикла;
	
	ЭлементДерева.Заявка	= Объект.Ссылка;
	Идентификатор			= ЭлементДерева.ПолучитьИдентификатор();
	
	ЗаявкаПользователя.ПолучитьПодчиненныеДокументы(Объект.Ссылка, ЭлементДерева);
		
	Возврат Идентификатор;
	
КонецФункции

Процедура ПолучитьПодчиненныеДокументы(Заявка, ДеревоПодчиненых) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаявкаПользователя.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЗаявкаПользователя КАК ЗаявкаПользователя
		|ГДЕ
		|	ЗаявкаПользователя.Основание = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Заявка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка	= РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока	= ДеревоПодчиненых.ПолучитьЭлементы().Добавить();
		НоваяСтрока.Заявка	= Выборка.Ссылка;
		ПолучитьПодчиненныеДокументы(Выборка.Ссылка, НоваяСтрока);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект) Экспорт
	СтруктураОтвета	= РаботаСHTML.ПолучитьHTMLИзЗаявки(ТекущийОбъект.Ссылка);
	ЭтаФорма.ОписаниеHTML						= СтруктураОтвета.ОписаниеHTML;
	ЭтаФорма.КоличествоКомментариев				= "" + СтруктураОтвета.КоличествоКомментариев;
	ЭтаФорма.ОписаниеРазработчикаHTML			= СтруктураОтвета.ОписаниеРазработчикаHTML;
	ЭтаФорма.КоличествоКомментариевРазработчика	= "" + СтруктураОтвета.КоличествоКомментариевРазработчика;
КонецПроцедуры

Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры		= ЭтаФорма.Параметры;
	Объект			= ЭтаФорма.Объект;
	ТЗНаблюдатели	= ЭтаФорма.ТЗНаблюдатели;
	Элементы		= ЭтаФорма.Элементы;
	СписокЗадач		= ЭтаФорма.СписокЗадач;
	ЗадачиСотрудника= ЭтаФорма.ЗадачиСотрудника;
	
	Если Параметры.Ключ.Пустая() Тогда //Это новый документ надо его заполнить		
		Если Объект.Основание.Пустая() Тогда
			Объект.Дата					= ТекущаяДатаСеанса();
			Объект.Заказчик				= ПараметрыСеанса.ТекущийПользователь;
			Объект.БизнесНаправление	= Объект.Заказчик.Родитель.БизнесНаправление;
			Объект.ДатаВыполнения		= ДобавитьМесяц(Объект.Дата, 1);		
			Объект.База1С				= Объект.Заказчик.ОсновнаяБаза;
			Объект.Важность				= Перечисления.СтепениВажностиЗадачи.Средняя;
		КонецЕсли;		
		ЭтаФорма.Заголовок	= "Создание заявки";		
	Иначе				
		ОбщегоНазначенияСервер.УдалитьОповещениеВФоне(Объект.Ссылка);
		ЭтаФорма.СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(Объект.Ссылка).СостояниеЗаявки;		
	КонецЕсли;
	
	ЭтаФорма.ТекущийПользователь	= ПараметрыСеанса.ТекущийПользователь;	
	ЭтаФорма.Организация			= Объект.Заказчик.Организация;	
	ЭтаФорма.КонтрольРелизов		= Объект.База1С.КонтрольРелизов;
	ТЗНаблюдатели.Загрузить(Объект.Наблюдатели.Выгрузить());
	
	Элементы.Основание.Видимость	= Не Объект.Основание.Пустая();
	
	ЭтаФорма.КоличествоВложенныхФайлов	= СокрЛП(Объект.ВложенныеФайлы.Количество());
	ЭтаФорма.КоличествоНаблюдателей	= СокрЛП(Объект.Наблюдатели.Количество());
	
	
	СписокЗадач.Параметры.УстановитьЗначениеПараметра("ЗаявкаПользователя",Объект.Ссылка);
	ЗадачиСотрудника.Параметры.УстановитьЗначениеПараметра("Исполнитель",Объект.Исполнитель);
	ЗадачиСотрудника.Параметры.УстановитьЗначениеПараметра("ДатаВыполнения", Объект.ДатаВыполнения + 604800);
	
	Если РольДоступна("Пользователь") Тогда		
		ЭтаФорма.ДоступнаРольПользователь	= Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	Объект				= ЭтаФорма.Объект;
	СостояниеЗаявки		= ЭтаФорма.СостояниеЗаявки;
	ЕстьИзменения		= ЭтаФорма.ЕстьИзменения;	
	Модифицированность  = ЭтаФорма.Модифицированность;
	
	ЕстьИзменения	= Макс(ЕстьИзменения, Модифицированность);
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("Модифицированность", Модифицированность);
	
	Если Истина
		И СостояниеЗаявки <> Справочники.СостоянияЗаявки.Закрыта 
		И СостояниеЗаявки <> Справочники.СостоянияЗаявки.Выполнена 
		И СостояниеЗаявки <> Справочники.СостоянияЗаявки.Отменена 
	Тогда
		Если ЗначениеЗаполнено(ТекущийОбъект.ДатаВыполнения) И ЗначениеЗаполнено(ТекущийОбъект.Релиз) И ТекущийОбъект.Релиз.ДатаВыхода < ТекущийОбъект.ДатаВыполнения Тогда			
			Сообщение	= Новый СообщениеПользователю;
			Сообщение.Текст			= "Срок выхода релиза меньше, даты выполнения задачи";
			Сообщение.Поле			= "ДатаВыполнения";
			Сообщение.ПутьКДанным	= "Объект";
			Сообщение.КлючДанных	= Объект.Ссылка;               			
			Сообщение.Сообщить();
			Отказ	= Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Если Модифицированность Тогда
		СтруктураОтвета	= Справочники.БазыДанных.ПроверитьДоступностьИнформационнойСистемыПользователямЗаявки(ТекущийОбъект);
		Для Каждого Ответ Из СтруктураОтвета Цикл
			Сообщение	= Новый СообщениеПользователю;
			Сообщение.Текст			= Ответ.Значение;
			Сообщение.Поле			= Ответ.Ключ;
			Сообщение.ПутьКДанным	= "Объект";
			Сообщение.КлючДанных	= Объект.Ссылка;               			
			Сообщение.Сообщить();
			Отказ	= Истина;	
		КонецЦикла; 
	КонецЕсли;

КонецПроцедуры

Процедура ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	//Если ПараметрыЗаписи.Свойство("ДобавленКомментарий") Тогда
		//СписокЗадач		= ЭтаФорма.СписокЗадач;
		Объект			= ЭтаФорма.Объект;
		ЭтаФорма.СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(Объект.Ссылка).СостояниеЗаявки;			
		ЭтаФорма.СписокЗадач.Параметры.УстановитьЗначениеПараметра("ЗаявкаПользователя", ТекущийОбъект.Ссылка);
	//КонецЕсли;	
КонецПроцедуры

