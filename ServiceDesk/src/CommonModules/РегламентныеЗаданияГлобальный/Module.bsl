////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СИСТЕМНЫХ СОБЫТИЙ

// Процедура УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий уведомляет
// пользователей о невыполнении регламентных заданий и "зависании" фоновых заданий.
//  Процедура работает только если информационная база файловая. Для серверной ИБ
// ответственность за выполнение регламентных заданий лежит на администраторе сервера 1С.
//  Подключает в процедуре РегламентныеЗаданияКлиент.ПриНачалеРаботыСистемы().
//
Процедура УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий() Экспорт

	ПериодУведомления = Неопределено; // Минут.
	Если РегламентныеЗаданияПолныеПрава.НужноУведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий(ПериодУведомления) Тогда
		ОписаниеОшибки = "";
		ЗаданияОбрабатываютсяНормально = Неопределено;
		РегламентныеЗаданияПолныеПрава.ТекущийСеансОбрабатываетЗадания(ЗаданияОбрабатываютсяНормально, , ОписаниеОшибки);
		Если НЕ ЗаданияОбрабатываютсяНормально Тогда
			РегламентныеЗаданияКлиент.ПриОшибкеОбработкиРегламентныхЗаданий(ОписаниеОшибки);
		КонецЕсли;
		ПодключитьОбработчикОжидания("УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий", ПериодУведомления * 60, Истина);
	КонецЕсли;

КонецПроцедуры // УведомлятьОНекорректномСостоянииОбработкиРегламентныхЗаданий()

// Процедура ОбработкаРегламентныхЗаданийВОсновномСеансе() вызывается
// обработчиком ожидания, который подключается в
// РегламентныеЗаданияКлиент.ПриНачалеРаботыСистемы().
//  Для обработки в отдельном сеансе применяется форма
// Обработки.КонсольРегламентныхЗаданий.Форма.ОбработкаРегламентныхЗаданий.
//
Процедура ОбработкаРегламентныхЗаданийВОсновномСеансе() Экспорт

	Если РегламентныеЗаданияПолныеПрава.ТекущийСеансОбрабатываетЗадания() Тогда
		РегламентныеЗаданияПолныеПрава.ОбработатьРегламентныеЗадания(, Истина);
		ПодключитьОбработчикОжидания("ОбработкаРегламентныхЗаданийВОсновномСеансе", 60, Истина);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаРегламентныхЗаданийВОсновномСеансе()

Процедура ОповеститьПользователя() Экспорт 
	
	СписокОповещений	= ОбщегоНазначенияСервер.ПолучитьСписокОповещений();
	
	Для Каждого Оповещение Из СписокОповещений Цикл
		Оповестить("ОбновитьОписаниеHTML", Оповещение.Заявка);
		ОписаниеОповещения	= Новый ОписаниеОповещения("ОткрытьЗаявкуПользователя", ОбщегоНазначенияКлиент, Оповещение.Заявка);
		ПоказатьОповещениеПользователя(Оповещение.Текст, ОписаниеОповещения, Оповещение.Пояснение, БиблиотекаКартинок[Оповещение.Картинка], СтатусОповещенияПользователя.Важное);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОповеститьПользователяРазово() Экспорт 
	
	СписокОповещений	= ОбщегоНазначенияСервер.ПолучитьСписокОповещений();
	
	Для Каждого Оповещение Из СписокОповещений Цикл
		ОписаниеОповещения	= Новый ОписаниеОповещения("ОткрытьЗаявкуПользователя", ОбщегоНазначенияКлиент, Оповещение.Заявка);
		ПоказатьОповещениеПользователя(Оповещение.Текст, ОписаниеОповещения, Оповещение.Пояснение, БиблиотекаКартинок[Оповещение.Картинка], СтатусОповещенияПользователя.Важное);
	КонецЦикла;
	
КонецПроцедуры