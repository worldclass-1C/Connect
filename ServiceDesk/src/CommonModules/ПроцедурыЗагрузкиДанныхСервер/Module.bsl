/////////////////////////////////////////////////////////////////////////////////////////////////////
// Дополнительные процедуры и функции

Функция ИзменитьЗапросПодSQL(ТекстЗапроса)Экспорт
	
	ТаблицаТекстаЗапроса = ПолучитьТаблицуТекстаЗапросаSQL(ТекстЗапроса);
	
	Для Каждого ТекСтрока Из ТаблицаТекстаЗапроса Цикл
		Если ТекСтрока.Определение = "ИмяТаблицы" Тогда
			ТекСтрока.Слово = "[#IB#]...[" + ТекСтрока.Слово + "]";
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПолучитьТекстИзТаблицы(ТаблицаТекстаЗапроса);
	
КонецФункции // ИзменитьЗапросПодSQL(ТекстЗапроса)

Функция ПолучитьТаблицуТекстаЗапросаSQL(ТекстЗапроса)
	
	ТаблицаТекстаЗапроса = Новый ТаблицаЗначений();
	ТаблицаТекстаЗапроса.Колонки.Добавить("Слово");
	ТаблицаТекстаЗапроса.Колонки.Добавить("Определение");
	
	ТекущееСлово = "";
	Для К = 1 по СтрДлина(ТекстЗапроса) Цикл
		Буква = Сред(ТекстЗапроса, К, 1);
		КодБуквы = КодСимвола(ТекстЗапроса, К);
		
		Если (КодБуквы >= 65) И (КодБуквы <= 90) ИЛИ
			 (КодБуквы >= 97) И (КодБуквы <=122) ИЛИ
			 (КодБуквы >= 1040) И (КодБуквы <= 1071) ИЛИ
			 (КодБуквы >= 1072) И (КодБуквы <= 1103) ИЛИ
			 (КодБуквы >= 48) И (КодБуквы <= 57) ИЛИ
			 (КодБуквы >= 48) Тогда
			ТекущееСлово = ТекущееСлово + Буква;
		Иначе
			Если ЗначениеЗаполнено(ТекущееСлово) Тогда
				НоваяСтрока = ТаблицаТекстаЗапроса.Добавить();
				НоваяСтрока.Слово = ТекущееСлово;
				НоваяСтрока.Определение = "Слово";
			КонецЕсли;
			НоваяСтрока = ТаблицаТекстаЗапроса.Добавить();
			НоваяСтрока.Слово = Буква;
			НоваяСтрока.Определение = "НеСлово";
			
			ТекущееСлово = "";
		КонецЕсли;		
	КонецЦикла;
	Если ЗначениеЗаполнено(ТекущееСлово) Тогда
		НоваяСтрока = ТаблицаТекстаЗапроса.Добавить();
		НоваяСтрока.Слово = ТекущееСлово;
		НоваяСтрока.Определение = "Слово";
	КонецЕсли;
	
	СледующееСловоИмяТаблицы = Ложь;
	Для Каждого ТекСтрока Из ТаблицаТекстаЗапроса Цикл
		Если ТекСтрока.Определение = "Слово" Тогда
			Если СледующееСловоИмяТаблицы Тогда
				ТекСтрока.Определение = "ИмяТаблицы";
				СледующееСловоИмяТаблицы = Ложь;
			Иначе
				Если НРег(ТекСтрока.Слово) = "from" ИЛИ 
					 НРег(ТекСтрока.Слово) = "join" Тогда
					СледующееСловоИмяТаблицы = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаТекстаЗапроса;
	
КонецФункции // ПолучитьТаблицуТекстаЗапросаSQL(ТекстЗапроса)

Функция ПолучитьТекстИзТаблицы(ТаблицаТекстаЗапроса)
	
	ТекстЗапроса = "";
	Для Каждого ТекСтрока Из ТаблицаТекстаЗапроса Цикл
		ТекстЗапроса = ТекстЗапроса + ТекСтрока.Слово;
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТаблицуТекстаЗапросаSQL(ТекстЗапроса)

Функция ПодключитьсяКВИБ(База) Экспорт
	
	Если База.ВерсияПлатформы = Перечисления.ПлатформыВнешнихИнформационныхБаз.Предприятие81 Тогда
		ОбъектПодключения = "V81.COMConnector";
	ИначеЕсли База.ВерсияПлатформы = Перечисления.ПлатформыВнешнихИнформационныхБаз.Предприятие82 Тогда
		ОбъектПодключения = "V82.COMConnector";
	ИначеЕсли База.ВерсияПлатформы = Перечисления.ПлатформыВнешнихИнформационныхБаз.Предприятие83 Тогда
		ОбъектПодключения = "V83.COMConnector";
	КонецЕсли;
		
	СтрокаПодключения = "Srvr="""+База.Сервер1С+""""+";Ref="""+База.ИмяБазы+""""+";Usr="""+База.ПользовательРобот+""";Pwd="""+База.ПарольРобота+"""";
	
	Попытка
		ТекCOMПодключение	= Новый COMОбъект(ОбъектПодключения);
		База				= ТекCOMПодключение.Connect(СтрокаПодключения);
		Возврат Новый Структура("ТекCOMПодключение,База",ТекCOMПодключение,База);
	Исключение
		ТекCOMПодключение	= Неопределено;
		База				= Неопределено;
		Сообщить("Не удалось подключиться к базе!");
		Сообщить(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Процедура РегистрацияЗаявокЧерезПочту() Экспорт
	
	Обработки.ПолучениеПисем.Создать().ЗагрузитьПочту();
	
КонецПроцедуры



