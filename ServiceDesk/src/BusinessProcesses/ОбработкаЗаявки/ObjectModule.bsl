
Функция ПолучитьСостояниеЗадачи(БизнесПроцесс, ТочкаМаршрута)
	
	СостояниеЗадачи	= Новый Структура;
	
	пЗапрос	= Новый Запрос;
	пЗапрос.Текст	= "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СлужебнаяЗадача.Пользователь КАК Пользователь,
	|	СлужебнаяЗадача.СрокИсполнения КАК СрокИсполнения,
	|	СлужебнаяЗадача.ВидДеятельности КАК ВидДеятельности
	|ИЗ
	|	Задача.СлужебнаяЗадача КАК СлужебнаяЗадача
	|ГДЕ
	|	СлужебнаяЗадача.ТочкаМаршрута = &ТочкаМаршрута
	|	И СлужебнаяЗадача.БизнесПроцесс = &БизнесПроцесс
	|	И НЕ СлужебнаяЗадача.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СлужебнаяЗадача.Дата УБЫВ";
	
	пЗапрос.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрута);
	пЗапрос.УстановитьПараметр("БизнесПроцесс", БизнесПроцесс);
	
	РезультатЗапроса	= пЗапрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда 
		Выборка	= РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		СостояниеЗадачи.Вставить("Пользователь", Выборка.Пользователь);
		СостояниеЗадачи.Вставить("СрокИсполнения", Выборка.СрокИсполнения);
		СостояниеЗадачи.Вставить("ВидДеятельности", Выборка.ВидДеятельности);
	Иначе
		СостояниеЗадачи.Вставить("Пользователь", Неопределено);
		СостояниеЗадачи.Вставить("СрокИсполнения", Дата(1,1,1));
		СостояниеЗадачи.Вставить("ВидДеятельности", Справочники.ВидыДеятельности.Консультация);
	КонецЕсли;	
	
	Возврат СостояниеЗадачи;
	
КонецФункции

Процедура АнализЗаявкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ТекущаяДата() + 36000;// + 10 часов
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура АнализЗаявкиОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.Зарегистрирована Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно зарегестировано 
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаявкаПринятаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Ложь
		ИЛИ СостояниеЗаявки = Справочники.СостоянияЗаявки.Отменена
		ИЛИ СостояниеЗаявки = Справочники.СостоянияЗаявки.Закрыта
		Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Есди состояние не равно отказ тогда заявка принята
	КонецЕсли;
	
КонецПроцедуры

Процедура ОзнакомлениеСОтклонениемПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.Пользователь			= ЗаявкаПользователя.Заказчик;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ТекущаяДата() + 86400;// + 24 часа    		
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура ОзнакомлениеСОтклонениемОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.Зарегистрирована Тогда
		Результат	= Истина; //Ознакомился с результатами отклонения
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.Закрыта Тогда	
		Результат	= Истина; 
	Иначе
		Результат	= Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаОзнакомленияСПричинамиОтклоненияОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки	= Справочники.СостоянияЗаявки.Зарегистрирована Тогда		
		Результат	= ТочкаВыбораВарианта.Варианты.ВернутьЗаявкуКонсультанту;			
	Иначе		
		Результат	= ТочкаВыбораВарианта.Варианты.ЗакрытьЗаявку;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределяемВидДеятельностиОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	Если ЗаявкаПользователя.ВидДеятельности	= Справочники.ВидыДеятельности.Консультация Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Консультация_ОшибкиПользователей;
	ИначеЕсли ЗаявкаПользователя.ВидДеятельности	= Справочники.ВидыДеятельности.ИсправлениеОшибок Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Разработка;
	ИначеЕсли ЗаявкаПользователя.ВидДеятельности	= Справочники.ВидыДеятельности.ОшибкиПользователей Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Консультация_ОшибкиПользователей;
	ИначеЕсли ЗаявкаПользователя.ВидДеятельности	= Справочники.ВидыДеятельности.Разработка Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Разработка;
	Иначе
		Результат	= ТочкаВыбораВарианта.Варианты.Консультация_ОшибкиПользователей;
	КонецЕсли;
	
КонецПроцедуры

Процедура СогласованиеЗаявкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ТекущаяДата() + 36000;// + 10 часов
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура СогласованиеЗаявкиОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.НаСогласовании Тогда
		Результат	= Ложь;	
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно на согласовании 
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаявкаСогласованнаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.Отменена Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Есди состояние не равно отказ тогда заявка согласована 
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриемЗаявкиКИсполнениюПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.Пользователь			= ЗаявкаПользователя.Исполнитель;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ЗаявкаПользователя.ДатаВыполнения;		
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура ПриемЗаявкиКИсполнениюОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Истина
		И СостояниеЗаявки = Справочники.СостоянияЗаявки.ПереданаКИсполнению 
		И ЗаявкаПользователя.Исполнитель = Задача.Пользователь
		И ЗаявкаПользователя.ДатаВыполнения = Задача.СрокИсполнения
		И ЗаявкаПользователя.ВидДеятельности = Задача.ВидДеятельности
		Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно передано к исполнению 
	КонецЕсли;
	
КонецПроцедуры

Процедура ВариантыПриемаЗаявкиКИсполнениюОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.Отменена Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Отменена;
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.ПереданаКИсполнению Тогда		
		СостояниеЗадачи	= ПолучитьСостояниеЗадачи(Ссылка, БизнесПроцессы.ОбработкаЗаявки.ТочкиМаршрута.ПриемЗаявкиКИсполнению);
		Если ЗаявкаПользователя.ВидДеятельности	<> СостояниеЗадачи.ВидДеятельности Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененВидДеятельности;	
		ИначеЕсли ЗаявкаПользователя.Исполнитель <> СостояниеЗадачи.Пользователь Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи;
		ИначеЕсли ЗаявкаПользователя.ДатаВыполнения	<> СостояниеЗадачи.СрокИсполнения Тогда			
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи; 
		КонецЕсли;		
	Иначе		
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ТребуетсяСогласованиеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Если Ложь
		Или ЗаявкаПользователя.ВидДеятельности	= Справочники.ВидыДеятельности.Разработка 
		Или ЗаявкаПользователя.ВидДеятельности	= Справочники.ВидыДеятельности.ИсправлениеОшибок 
		Тогда
		
		ЗаявкаНеБылаРанееСогласована	= БизнесПроцессы.ОбработкаЗаявки.ПроверитьИсториюСогласования(ЗаявкаПользователя);
		
		Если ЗаявкаНеБылаРанееСогласована Тогда
			Результат	= Истина;			
			СостояниеЗаявки	= ОбщегоНазначенияСервер.ИзменитьСостояниеЗаявки(ЗаявкаПользователя, "НаСогласовании");
		Иначе 
			Результат	= Ложь;
		КонецЕсли;
	Иначе
		Результат	= Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТребуетсяПроектноеРешениеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.ОписаниеПроектногоРешения Тогда
		Результат = Истина;		
	Иначе
		Результат = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ОписаниеПроектногоРешенияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.Пользователь			= ЗаявкаПользователя.Исполнитель;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ЗаявкаПользователя.ДатаВыполнения;
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура ОписаниеПроектногоРешенияОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Истина
		И СостояниеЗаявки = Справочники.СостоянияЗаявки.ОписаниеПроектногоРешения 
		И ЗаявкаПользователя.Исполнитель = Задача.Пользователь
		И ЗаявкаПользователя.ДатаВыполнения = Задача.СрокИсполнения
		И ЗаявкаПользователя.ВидДеятельности = Задача.ВидДеятельности
	Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно передано к исполнению 
	КонецЕсли;
	
КонецПроцедуры

Процедура ВариантыОписанияПроектногоРешенияОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.Отменена Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Отменена;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОписаниеПроектногоРешения Тогда		
		СостояниеЗадачи	= ПолучитьСостояниеЗадачи(Ссылка, БизнесПроцессы.ОбработкаЗаявки.ТочкиМаршрута.ОписаниеПроектногоРешения);
		Если ЗаявкаПользователя.ВидДеятельности	<> СостояниеЗадачи.ВидДеятельности Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененВидДеятельности;	
		ИначеЕсли ЗаявкаПользователя.Исполнитель <> СостояниеЗадачи.Пользователь Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи;
		ИначеЕсли ЗаявкаПользователя.ДатаВыполнения	<> СостояниеЗадачи.СрокИсполнения Тогда			
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи; 
		КонецЕсли;		
	Иначе		
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;	
	КонецЕсли;
	
КонецПроцедуры

Процедура СогласованиеПроектногоРешенияПриСозданииЗадач1(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;		
		Задача.Пользователь			= ЗаявкаПользователя.Архитектор1;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ЗаявкаПользователя.ДатаВыполнения;
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура СогласованиеПроектногоРешенияОбработкаПроверкиВыполнения1(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Истина
		И СостояниеЗаявки = Справочники.СостоянияЗаявки.СогласованиеПроектногоРешения1 
		И ЗаявкаПользователя.Исполнитель = Задача.Пользователь
		И ЗаявкаПользователя.ДатаВыполнения = Задача.СрокИсполнения
		И ЗаявкаПользователя.ВидДеятельности = Задача.ВидДеятельности
	Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно передано к исполнению 
	КонецЕсли;		
	
КонецПроцедуры

Процедура ВариантыСогласованияПроектногоРешенияОбработкаВыбораВарианта1(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.ОписаниеПроектногоРешения Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Отменена;
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.СогласованиеПроектногоРешения1 Тогда		
		СостояниеЗадачи	= ПолучитьСостояниеЗадачи(Ссылка, БизнесПроцессы.ОбработкаЗаявки.ТочкиМаршрута.СогласованиеПроектногоРешения1);
		Если ЗаявкаПользователя.ВидДеятельности	<> СостояниеЗадачи.ВидДеятельности Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененВидДеятельности;	
		ИначеЕсли ЗаявкаПользователя.Исполнитель <> СостояниеЗадачи.Пользователь Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи;
		ИначеЕсли ЗаявкаПользователя.ДатаВыполнения	<> СостояниеЗадачи.СрокИсполнения Тогда			
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи; 
		КонецЕсли;		
	Иначе		
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;	
	КонецЕсли;
	
КонецПроцедуры

Процедура СогласованиеПроектногоРешенияПриСозданииЗадач2(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;		
		Задача.Пользователь			= ЗаявкаПользователя.Архитектор2;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ЗаявкаПользователя.ДатаВыполнения;
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура СогласованиеПроектногоРешенияОбработкаПроверкиВыполнения2(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Истина
		И СостояниеЗаявки = Справочники.СостоянияЗаявки.СогласованиеПроектногоРешения2 
		И ЗаявкаПользователя.Исполнитель = Задача.Пользователь
		И ЗаявкаПользователя.ДатаВыполнения = Задача.СрокИсполнения
		И ЗаявкаПользователя.ВидДеятельности = Задача.ВидДеятельности
	Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно передано к исполнению 
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВариантыСогласованияПроектногоРешенияОбработкаВыбораВарианта2(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.ОписаниеПроектногоРешения Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Отменена;
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.СогласованиеПроектногоРешения2 Тогда		
		СостояниеЗадачи	= ПолучитьСостояниеЗадачи(Ссылка, БизнесПроцессы.ОбработкаЗаявки.ТочкиМаршрута.СогласованиеПроектногоРешения2);
		Если ЗаявкаПользователя.ВидДеятельности	<> СостояниеЗадачи.ВидДеятельности Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененВидДеятельности;	
		ИначеЕсли ЗаявкаПользователя.Исполнитель <> СостояниеЗадачи.Пользователь Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи;
		ИначеЕсли ЗаявкаПользователя.ДатаВыполнения	<> СостояниеЗадачи.СрокИсполнения Тогда			
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи; 
		КонецЕсли;		
	Иначе		
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнениеЗаявкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.Пользователь			= ЗаявкаПользователя.Исполнитель;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ЗаявкаПользователя.ДатаВыполнения;
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура ВыполнениеЗаявкиОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Истина
		И СостояниеЗаявки = Справочники.СостоянияЗаявки.ВРаботе 
		И ЗаявкаПользователя.Исполнитель = Задача.Пользователь
		И ЗаявкаПользователя.ДатаВыполнения = Задача.СрокИсполнения
		И ЗаявкаПользователя.ВидДеятельности = Задача.ВидДеятельности
		Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно в работе
	КонецЕсли;
	
КонецПроцедуры

Процедура ВариантыВыполненияЗаявкиОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки	= Справочники.СостоянияЗаявки.ВРаботе	Тогда		
		СостояниеЗадачи	= ПолучитьСостояниеЗадачи(Ссылка, БизнесПроцессы.ОбработкаЗаявки.ТочкиМаршрута.ВыполнениеЗаявки);
		Если ЗаявкаПользователя.ВидДеятельности	<> СостояниеЗадачи.ВидДеятельности Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененВидДеятельности;	
		ИначеЕсли ЗаявкаПользователя.Исполнитель <> СостояниеЗадачи.Пользователь Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененИсполнитель;
			СостояниеЗаявки	= ОбщегоНазначенияСервер.ИзменитьСостояниеЗаявки(ЗаявкаПользователя, "ПереданаКИсполнению");
		ИначеЕсли ЗаявкаПользователя.ДатаВыполнения	<> СостояниеЗадачи.СрокИсполнения Тогда			
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененаДатаВыполнения; 	
		КонецЕсли;		
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.ВОжидании	Тогда		
		Результат	= ТочкаВыбораВарианта.Варианты.ПереведенаВОжидание;			
	Иначе			
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОжиданиеПоЗаявкеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.Пользователь			= ЗаявкаПользователя.Исполнитель;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;				
		Задача.СрокИсполнения		= ЗаявкаПользователя.ДатаВыполнения;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОжиданиеПоЗаявкеОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Истина
		И СостояниеЗаявки = Справочники.СостоянияЗаявки.ВОжидании 
		И ЗаявкаПользователя.Исполнитель = Задача.Пользователь
		И ЗаявкаПользователя.ДатаВыполнения = Задача.СрокИсполнения
		Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно в работе
	КонецЕсли;
	
КонецПроцедуры

Процедура ВариантыОжадиняПоЗаявкеОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.Отменена Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Отменена;
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.ВОжидании Тогда		
		СостояниеЗадачи	= ПолучитьСостояниеЗадачи(Ссылка, БизнесПроцессы.ОбработкаЗаявки.ТочкиМаршрута.ВыполнениеЗаявки);
		Если ЗаявкаПользователя.Исполнитель	<> СостояниеЗадачи.Пользователь Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененИсполнитель;
		ИначеЕсли ЗаявкаПользователя.ДатаВыполнения	<> СостояниеЗадачи.СрокИсполнения Тогда			
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененаДатаВыполнения; 			
		КонецЕсли;		
	Иначе		
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТребуетсяКонтрольПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Если ЭтотОбъект.ЗаявкаПользователя.ВидДеятельности = Справочники.ВидыДеятельности.Разработка Тогда
		Результат	= Истина;
	ИначеЕсли ЭтотОбъект.ЗаявкаПользователя.ВидДеятельности = Справочники.ВидыДеятельности.ИсправлениеОшибок Тогда
		Результат	= Истина;	
	Иначе
		Результат	= Ложь; 
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтрольЗаявкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.Пользователь			= ЗаявкаПользователя.Контроллер;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ЗаявкаПользователя.ДатаВыполнения;
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура КонтрольЗаявкиОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Истина
		И СостояниеЗаявки = Справочники.СостоянияЗаявки.НаКонтроле 
		И ЗаявкаПользователя.Контроллер = Задача.Пользователь
		И ЗаявкаПользователя.ДатаВыполнения = Задача.СрокИсполнения
	Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно на проверке
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВариантыКонтроляЗаявкиОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки	= Справочники.СостоянияЗаявки.НаПроверке Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.ВРаботе Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.ЕстьОшбики;
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.НаКонтроле Тогда			
		СостояниеЗадачи	= ПолучитьСостояниеЗадачи(Ссылка, БизнесПроцессы.ОбработкаЗаявки.ТочкиМаршрута.КонтрольЗаявки);
		Если ЗаявкаПользователя.Контроллер <> СостояниеЗадачи.Пользователь Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи;
		ИначеЕсли ЗаявкаПользователя.ДатаВыполнения	<> СостояниеЗадачи.СрокИсполнения Тогда			
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи; 
		КонецЕсли;		
	Иначе
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаЗаявкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.Пользователь			= ?(ЗаявкаПользователя.Тестировщик.Пустая(), ЗаявкаПользователя.Заказчик, ЗаявкаПользователя.Тестировщик);
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ЗаявкаПользователя.ДатаВыполнения;
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура ПроверкаЗаявкиОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Истина
		И СостояниеЗаявки = Справочники.СостоянияЗаявки.НаПроверке 
		И ЗаявкаПользователя.Тестировщик = Задача.Пользователь
		И ЗаявкаПользователя.ДатаВыполнения = Задача.СрокИсполнения
		Тогда
		Результат	= Ложь;
	ИначеЕсли СостояниеЗаявки = Справочники.СостоянияЗаявки.ОжиданиеОтвета Тогда
		Результат	= Ложь;	
	Иначе
		Результат	= Истина;// Будем считать задачу выполненой если состояние заявки не равно на проверке
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВариантыПроверкиЗаявкиОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки	= Справочники.СостоянияЗаявки.Выполнена	Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.ВРаботе Тогда
		Результат	= ТочкаВыбораВарианта.Варианты.ЕстьОшбики;
	ИначеЕсли СостояниеЗаявки	= Справочники.СостоянияЗаявки.НаПроверке Тогда			
		СостояниеЗадачи	= ПолучитьСостояниеЗадачи(Ссылка, БизнесПроцессы.ОбработкаЗаявки.ТочкиМаршрута.ПриемЗаявкиКИсполнению);
		Если ЗаявкаПользователя.Тестировщик	<> СостояниеЗадачи.Пользователь Тогда
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи;
		ИначеЕсли ЗаявкаПользователя.ДатаВыполнения	<> СостояниеЗадачи.СрокИсполнения Тогда			
			Результат	= ТочкаВыбораВарианта.Варианты.ИзмененыРеквизитыЗадачи; 
		КонецЕсли;		
	Иначе
		Результат	= ТочкаВыбораВарианта.Варианты.Выполнена;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗакрытьЗаявкуПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	Для Каждого Задача Из ФормируемыеЗадачи Цикл
		
		Задача.АвторИзменения		= ПараметрыСеанса.ТекущийПользователь;
		Задача.Пользователь			= ЗаявкаПользователя.Заказчик;
		Задача.ЗаявкаПользователя	= ЗаявкаПользователя;
		Задача.ВидДеятельности		= ЗаявкаПользователя.ВидДеятельности;
		Задача.Исполнитель			= ЗаявкаПользователя.Исполнитель;		
		Задача.СрокИсполнения		= ТекущаяДата() + 86400;// + 24 часа
		
	КонецЦикла;
	
	ОбщегоНазначенияСервер.ДобавитьОповещениеПоЗаявке(ЗаявкаПользователя);
	
КонецПроцедуры

Процедура ЗакрытьЗаявкуОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если Ложь
		ИЛИ СостояниеЗаявки = Справочники.СостоянияЗаявки.Закрыта 
		ИЛИ СостояниеЗаявки = Справочники.СостоянияЗаявки.ВРаботе 
		Тогда
		Результат	= Истина;
	Иначе 
		Результат	= Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаявкаЗакрытаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	СостояниеЗаявки	= ОбщегоНазначенияСервер.ПолучитьСостояниеЗаявки(ЗаявкаПользователя).СостояниеЗаявки;
	
	Если СостояниеЗаявки = Справочники.СостоянияЗаявки.Закрыта Тогда
		Результат	= Истина;
		ОбщегоНазначенияСервер.УдалитьВсеОповещенияВФоне(ЗаявкаПользователя);
	Иначе 
		Результат	= Ложь;
	КонецЕсли;
	
КонецПроцедуры





