
Функция ОтправитьСМС(Параметры, Ответ) Экспорт
	
	HTTPСоединение	= Новый HTTPСоединение(Параметры.Сервер, Параметры.Порт,,,, Параметры.Таймаут, ?(Параметры.ЗащищенноеСоединение, Новый ЗащищенноеСоединениеOpenSSL(), Неопределено), Параметры.ИспользоватьАутентификациюОС);	
	
	URL	= "smartdelivery-in/multi.php/?login=" + Параметры.Пользователь + "&password=" + Параметры.Пароль + "&phones=" + Параметры.НомерТелефона + "&message=" + Параметры.Текст + "&originator=" + Параметры.ИмяОтправителя + "&want_sms_ids=1";
	ЗапросHTTP	= Новый HTTPЗапрос(URL);
	ОтветHTTP	= HTTPСоединение.Получить(ЗапросHTTP);
	ТелоЗапроса	= СокрЛП(ОтветHTTP.ПолучитьТелоКакСтроку());
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТелоЗапроса);
	ТекущийПуть = "";
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ЧтениеXML.Имя = "code" Тогда
				ТекущийПуть = "code";
			ИначеЕсли ЧтениеXML.Имя = "description" Тогда
				ТекущийПуть = "description";
			ИначеЕсли ЧтениеXML.Имя = "result" Тогда
				ТекущийПуть = "result";
			ИначеЕсли ЧтениеXML.Имя = "sms_id" Тогда
				ТекущийПуть = "sms_id";
			КонецЕсли;
		КонецЕсли;
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			Если ТекущийПуть = "code" Тогда
				Код = ЧтениеXML.Значение;
			ИначеЕсли ТекущийПуть = "description" Тогда
				РасшифровкаОшибки = ЧтениеXML.Значение;
			ИначеЕсли ТекущийПуть = "result" Тогда
				Результат = ЧтениеXML.Значение;
			ИначеЕсли ТекущийПуть = "sms_id" Тогда
				sms_id = ЧтениеXML.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Код = "0" И Результат = "OK" Тогда
		Ответ.Вставить("ИД", sms_id);
		Ответ.Вставить("СтатусСообщения", Перечисления.СтатусыСообщений.Отправлено);		
	Иначе
		Ответ.Вставить("Ошибка", РасшифровкаОшибки);		
	КонецЕсли;
	
	Ответ.Вставить("Период", УниверсальноеВремя(ТекущаяДата()));
	
	Возврат Ответ;	
	
КонецФункции

Функция ПроверитьСтатусСМС(Параметры, Ответ) Экспорт
	
	HTTPСоединение	= Новый HTTPСоединение(Параметры.Сервер, Параметры.Порт,,,, Параметры.Таймаут, ?(Параметры.ЗащищенноеСоединение, Новый ЗащищенноеСоединениеOpenSSL(), Неопределено), Параметры.ИспользоватьАутентификациюОС);	
	
	URL	= "smartdelivery-in/multi.php/?login=" + Параметры.Пользователь + "&password=" + Параметры.Пароль + "&operation=status&sd=false" + "&sms_id=" + Параметры.ИД + "&sd=false&route=viber(60)-sms";
	ЗапросHTTP	= Новый HTTPЗапрос(URL);
	ОтветHTTP	= HTTPСоединение.Получить(ЗапросHTTP);
	ТелоЗапроса	= СокрЛП(ОтветHTTP.ПолучитьТелоКакСтроку());
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТелоЗапроса);
	ТекущийПуть = "";
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ЧтениеXML.Имя = "status" Тогда
				ТекущийПуть = "status";
			КонецЕсли;
		КонецЕсли;
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			Если ТекущийПуть = "status" Тогда
				ОтветСтатус = ЧтениеXML.Значение;
				ТекущийПуть = "";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Статус	= СтатусСообщения(Врег(ОтветСтатус));
	Если ТипЗнч(Статус) = Тип("ПеречислениеСсылка.СтатусыСообщений") Тогда
		Ответ.Вставить("СтатусСообщения", Статус);
	Иначе
		Ответ.Вставить("СтатусСообщения", Перечисления.СтатусыСообщений.НеДоставлено);
		Ответ.Вставить("Ошибка","Неизвестный статус");
	КонецЕсли;
	
	Ответ.Вставить("Период", УниверсальноеВремя(ТекущаяДата()));
	
	Возврат Ответ;
	
КонецФункции

Функция СтатусСообщения(Статус)
	
	Если Статус = "SENT" Или Статус = "NOT_ROUTED" Или Статус = "ACCEPTD" Или Статус = "UNDELIVERED" Тогда
		Возврат Перечисления.СтатусыСообщений.Отправлено;
	ИначеЕсли Статус = "DOUBLED" Или Статус = "ERROR" Тогда
		Возврат Перечисления.СтатусыСообщений.НеОтправлено;
	ИначеЕсли Статус = "DELIVERED" Тогда
		Возврат Перечисления.СтатусыСообщений.Доставлено;
	ИначеЕсли Статус = "TIMEOUT" Или Статус = "EXPIRED" Тогда
		Возврат Перечисления.СтатусыСообщений.НеДоставлено;
	ИначеЕсли Статус = "READ" Тогда
		Возврат Перечисления.СтатусыСообщений.Прочитано;
	Иначе
		Возврат Статус;
	КонецЕсли;
	
КонецФункции
