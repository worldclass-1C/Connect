//SC-067295
Функция sendSMS(Параметры, Ответ) Экспорт
	
	HTTPСоединение = Новый HTTPСоединение(Параметры.server,Параметры.port,,,,Параметры.timeout,?(Параметры.ЗащищенноеСоединение, Новый ЗащищенноеСоединениеOpenSSL(), Неопределено), Параметры.UseOSAuthentication);

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	
	ЗапросHTTP = Новый HTTPЗапрос("/modules/send_sms.php", Заголовки);
	СтрокаПараметров = "username=" + Параметры.user + 
						"&password=" + Параметры.password +
						"&to=" + Параметры.phone +
						"&from=" + Параметры.senderName +
						"&coding=2" +
						"&text=" + Параметры.text;
	
	ЗапросHTTP.УстановитьТелоИзСтроки(СтрокаПараметров,,ИспользованиеByteOrderMark.НеИспользовать);
	ОтветHTTP = HTTPСоединение.ОтправитьДляОбработки(ЗапросHTTP);
	ТелоОтвета = СокрЛП(ОтветHTTP.ПолучитьТелоКакСтроку());
	
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(ТелоОтвета);
	
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	
	Узлы = ДокументHTML.ПолучитьЭлементыПоИмени("body")[0].ДочерниеУзлы;
	
	СтрукутраРасшифровкаОтвета = РасшифроватьУзлы(Узлы);

	Если СтрукутраРасшифровкаОтвета.Свойство("error") Тогда 
		РасшифровкаОшибки = ПолучитьРасшифровкуОшибки(СтрукутраРасшифровкаОтвета.Error);
		Ответ.Вставить("error", РасшифровкаОшибки);
	ИначеЕсли  СтрукутраРасшифровкаОтвета.Свойство("Success") Тогда
		Ответ.Вставить("id", СтрукутраРасшифровкаОтвета.ID);
		Ответ.Вставить("messageStatus", Перечисления.messageStatuses.sent);
	КонецЕсли;
	
	Ответ.Вставить("period", УниверсальноеВремя(ТекущаяДата()));
	
	Возврат Ответ;
	
КонецФункции

Функция checkSmsStatus(Параметры, Ответ) Экспорт
	
	HTTPСоединение = Новый HTTPСоединение(Параметры.server,Параметры.port,,,,Параметры.timeout,?(Параметры.ЗащищенноеСоединение, Новый ЗащищенноеСоединениеOpenSSL(), Неопределено), Параметры.UseOSAuthentication);

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
	
	ЗапросHTTP = Новый HTTPЗапрос("/modules/sms_status.php", Заголовки);
	СтрокаПараметров =  "username=" + Параметры.user + 
						"&password=" + Параметры.password +
						"&id=" + Параметры.id;
	
	ЗапросHTTP.УстановитьТелоИзСтроки(СтрокаПараметров,,ИспользованиеByteOrderMark.НеИспользовать);
	ОтветHTTP = HTTPСоединение.ОтправитьДляОбработки(ЗапросHTTP);
	ТелоОтвета = ОтветHTTP.ПолучитьТелоКакСтроку();
	
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(ТелоОтвета);
	
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	
	Узлы = ДокументHTML.ПолучитьЭлементыПоИмени("body")[0].ДочерниеУзлы;
	
	СтрукутраРасшифровкаОтвета = РасшифроватьУзлы(Узлы);
		
	Если СтрукутраРасшифровкаОтвета.Свойство("error") Тогда 
		РасшифровкаОшибки = ПолучитьРасшифровкуОшибки(СтрукутраРасшифровкаОтвета.Error);
		Ответ.Вставить("error", РасшифровкаОшибки);
		Ответ.Вставить("messageStatus", Перечисления.messageStatuses.notDelivered);
	ИначеЕсли  СтрукутраРасшифровкаОтвета.Свойство("Status") Тогда
		Статус = ПолучитьСтатусСообщения(СтрукутраРасшифровкаОтвета.Status);
		Ответ.Вставить("messageStatus", Статус);
	КонецЕсли;
	
	Ответ.Вставить("period", УниверсальноеВремя(ТекущаяДата()));
	
	Возврат Ответ;

КонецФункции

Функция ПолучитьРасшифровкуОшибки(ТекстОшибки)
	
	РасшифрокаОшибки = "";
	Если ТекстОшибки = "Invalid request" Тогда 
		РасшифрокаОшибки = "проверьте наличие всех неоходимых параметров в запросе";
	ИначеЕсли ТекстОшибки = "Invalid username username or password password or user is blocked" Тогда 
		РасшифрокаОшибки = "Проверьте login и password и то, что ваш аккаунт не заблокирован";
	ИначеЕсли ТекстОшибки = "Invalid or missing 'from' address" Тогда 
		РасшифрокаОшибки = "Проверьте наличие и формат номера получателя";
	ИначеЕсли ТекстОшибки = "Invalid or missing 'to' address" Тогда 
		РасшифрокаОшибки = "Проверьте наличие и длину адреса отправителя";
	ИначеЕсли ТекстОшибки = "Invalid or missing coding" Тогда 
		РасшифрокаОшибки = "Проверьте наличие и значение параметра coding";
	ИначеЕсли ТекстОшибки = "Missing text" Тогда 
		РасшифрокаОшибки = "Проверьте наличие параметра text";
	ИначеЕсли ТекстОшибки = "Text too long" Тогда 
		РасшифрокаОшибки = "Проверьте длину параметра text";
	ИначеЕсли ТекстОшибки = "Invalid or missing mclass" Тогда 
		РасшифрокаОшибки = "Проверьте наличие и значение параметра mclass";
	ИначеЕсли ТекстОшибки = "Invalid or missing priority" Тогда 
		РасшифрокаОшибки = "Проверьте наличие и значение параметра priority";
	ИначеЕсли ТекстОшибки = "Invalid or missing dlrmask" Тогда 
		РасшифрокаОшибки = "Проверьте наличие и значение параметра dlrmask";
	ИначеЕсли ТекстОшибки = "IP not allowed" Тогда 
		РасшифрокаОшибки = "Ваш IP заблокирован";
	ИначеЕсли ТекстОшибки = "Max limit exceeded" Тогда 
		РасшифрокаОшибки = "Вы достили максимального количества СМС";
	ИначеЕсли ТекстОшибки = "Insufficient balance" Тогда 
		РасшифрокаОшибки = "У вас недостаточно средств на балансе";
	ИначеЕсли ТекстОшибки = "Invalid or missing missing message message ID" Тогда 
		РасшифрокаОшибки = "Проверьте наличие идентификатора Messages";
	ИначеЕсли ТекстОшибки = "Unknown message ID" Тогда 
		РасшифрокаОшибки = "Проверьте идентификатор Messages";
	КонецЕсли;
	
	Возврат РасшифрокаОшибки;
	
КонецФункции

Функция ПолучитьСтатусСообщения(КодСтатуса)
	
	Если КодСтатуса = "16" Тогда
		Возврат Перечисления.messageStatuses.notSent;
	ИначеЕсли КодСтатуса = "32" Тогда
		Возврат Перечисления.messageStatuses.notSent;
	ИначеЕсли КодСтатуса = "2" Тогда
		Возврат Перечисления.messageStatuses.notDelivered;
	ИначеЕсли КодСтатуса = "0" Тогда
		Возврат Перечисления.messageStatuses.sent;
	ИначеЕсли КодСтатуса = "4" Тогда
		Возврат Перечисления.messageStatuses.sent;
	ИначеЕсли КодСтатуса = "8" Тогда
		Возврат Перечисления.messageStatuses.sent;
	ИначеЕсли КодСтатуса = "1" Тогда
		Возврат Перечисления.messageStatuses.delivered;
	Иначе
		Возврат КодСтатуса;
	КонецЕсли;
	
КонецФункции

Функция РасшифроватьУзлы(Узлы)
	
	СтрукутраРасшифровки = Новый Структура;
	
	Для Каждого Узел Из Узлы Цикл
		Если Узел.ТипУзла = ТипУзлаDOM.Текст Тогда 
			Если СтрНайти(Узел.ТекстовоеСодержимое, "ID:") > 0 Тогда
				СтрукутраРасшифровки.Вставить("ID",СокрЛП(СтрЗаменить(Узел.ТекстовоеСодержимое,"ID:","")));
			ИначеЕсли СтрНайти(Узел.ТекстовоеСодержимое, "Status:") > 0 Тогда
				СтрукутраРасшифровки.Вставить("Status",СокрЛП(СтрЗаменить(Узел.ТекстовоеСодержимое,"Status:","")));
			ИначеЕсли СтрНайти(Узел.ТекстовоеСодержимое, "Status update time:") > 0 Тогда
				СтрукутраРасшифровки.Вставить("StatusUpdateTime",СокрЛП(СтрЗаменить(Узел.ТекстовоеСодержимое,"Status update time:","")));
			ИначеЕсли СтрНайти(Узел.ТекстовоеСодержимое, "error:") > 0 Тогда
				СтрукутраРасшифровки.Вставить("error",СокрЛП(СтрЗаменить(Узел.ТекстовоеСодержимое,"error:","")));
			ИначеЕсли СтрНайти(Узел.ТекстовоеСодержимое, "Success") > 0 Тогда
				СтрукутраРасшифровки.Вставить("Success",СокрЛП(СтрЗаменить(Узел.ТекстовоеСодержимое,"Success:","")));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат  СтрукутраРасшифровки;
	
КонецФункции


