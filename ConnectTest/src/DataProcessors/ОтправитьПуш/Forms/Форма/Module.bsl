
&НаКлиенте
Процедура ОтправитьПуш(Команда)
	ОтправитьПушНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтправитьПушНаСервере()
	
	//--Подготовка заголовка пуш сообщения
	МассивСловНовый	= Новый Массив;
	МассивСлов		= СтрРазделить(пЗаголовок, " ");	
	Для Каждого Слово Из МассивСлов Цикл		
		Если Найти(Слово, "#emj") > 0 Тогда			
			Слово	= РаскодироватьСтроку(СтрЗаменить(Слово, "#emj", ""), СпособКодированияСтроки.КодировкаURL);
		КонецЕсли;
		МассивСловНовый.Добавить(Слово);
	КонецЦикла;	
	ЗаголовокПуш	= СтрСоединить(МассивСловНовый, " ");
	
	//--Подготовка текста пуш сообщения
	//НЕ ЗАБЫТЬ ЧТО СМАЙЛИК ДОЛЖЕН БЫТЬ В ФОРМАТЕ %F0%9F%8F%8B%20
	МассивСловНовый	= Новый Массив;
	МассивСлов		= СтрРазделить(Текст, " ");	
	Для Каждого Слово Из МассивСлов Цикл		
		Если Найти(Слово, "#emj") > 0 Тогда			
			Слово	= РаскодироватьСтроку(СтрЗаменить(Слово, "#emj", ""), СпособКодированияСтроки.КодировкаURL);
		КонецЕсли;
		МассивСловНовый.Добавить(Слово);
	КонецЦикла;	
	ТекстПуш	= СтрСоединить(МассивСловНовый, " ");
		
	ЗаписьJSON		= Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
		
	пЗапрос	= Новый Запрос;
	пЗапрос.Текст	= "ВЫБРАТЬ
	             	  |	Токены.Ссылка КАК Токен,
	             	  |	ЕСТЬNULL(ЗарегистрированныеУстройства.ДатаЗаписи, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаЗаписи,
	             	  |	ЕСТЬNULL(ЗарегистрированныеУстройства.ТокенУстройства, """") КАК ТокенУстройства,
	             	  |	ВЫБОР
	             	  |		КОГДА Токены.ОперационнаяСистема = ЗНАЧЕНИЕ(Перечисление.ОперационныеСистемы.Android)
	             	  |			ТОГДА ""GCM""
	             	  |		ИНАЧЕ ""APNS""
	             	  |	КОНЕЦ КАК ТипПодписчика,
	             	  |	Токены.Сеть КАК Сеть,
	             	  |	Токены.ВидПриложения КАК ВидПриложения,
	             	  |	Токены.ОперационнаяСистема КАК ОперационнаяСистема
	             	  |ПОМЕСТИТЬ ВТ
	             	  |ИЗ
	             	  |	Справочник.Токены КАК Токены
	             	  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗарегистрированныеУстройства КАК ЗарегистрированныеУстройства
	             	  |		ПО (ЗарегистрированныеУстройства.Токен = Токены.Ссылка)
	             	  |ГДЕ
	             	  |	Токены.Пользователь В(&МассивПользователей)
	             	  |	И Токены.Ссылка В(&МассивТокенов)
	             	  |	И Токены.ДатаБлокировки = ДАТАВРЕМЯ(1, 1, 1)
	             	  |;
	             	  |
	             	  |////////////////////////////////////////////////////////////////////////////////
	             	  |ВЫБРАТЬ
	             	  |	ВТ.Токен КАК Токен,
	             	  |	ВТ.ДатаЗаписи КАК ДатаЗаписи,
	             	  |	ВТ.ТокенУстройства КАК ТокенУстройства,
	             	  |	ВТ.ТипПодписчика КАК ТипПодписчика,
	             	  |	ВТ.ОперационнаяСистема КАК ОперационнаяСистема,
	             	  |	ЕСТЬNULL(СертификатПриложенияДляСети.Сертификат, СертификатПриложенияОбщий.Сертификат) КАК Сертификат
	             	  |ИЗ
	             	  |	ВТ КАК ВТ
	             	  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СертификатыПриложений КАК СертификатПриложенияДляСети
	             	  |		ПО ВТ.Сеть = СертификатПриложенияДляСети.Сеть
	             	  |			И ВТ.ВидПриложения = СертификатПриложенияДляСети.ВидПриложения
	             	  |			И ВТ.ОперационнаяСистема = СертификатПриложенияДляСети.ОперационнаяСистема
	             	  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СертификатыПриложений КАК СертификатПриложенияОбщий
	             	  |		ПО (СертификатПриложенияОбщий.Сеть = ЗНАЧЕНИЕ(Справочник.Сети.ПустаяСсылка))
	             	  |			И ВТ.ВидПриложения = СертификатПриложенияОбщий.ВидПриложения
	             	  |			И ВТ.ОперационнаяСистема = СертификатПриложенияОбщий.ОперационнаяСистема";
	
	пЗапрос.УстановитьПараметр("МассивПользователей", Пользователи.Выгрузить().ВыгрузитьКолонку("Пользователь"));
	
	МассивТокенов	= Пользователи.Выгрузить().ВыгрузитьКолонку("Токен");
	Если МассивТокенов.Количество() = 0 Тогда
		пЗапрос.Текст	= СтрЗаменить(пЗапрос.Текст, "И Токены.Ссылка В (&МассивТокенов)", "");	
	Иначе
		пЗапрос.УстановитьПараметр("МассивТокенов", МассивТокенов);
	КонецЕсли;
	
	Выборка	= пЗапрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТокенУстройства <> "" Тогда
			Уведомление				= Новый ДоставляемоеУведомление;
			Уведомление.Заголовок	= ЗаголовокПуш;
			Уведомление.Текст		= ТекстПуш;
			Уведомление.Данные		= РаботаССообщениями.ДанныеPush(action, objectId, objectType, noteId);
			Уведомление.ЗвуковоеОповещение = ?(БезЗвука, ЗвуковоеОповещение.Нет, ЗвуковоеОповещение.ПоУмолчанию);
			Уведомление.Получатели.Добавить(РаботаССообщениями.ПолучательPush(Выборка.ТокенУстройства, Выборка.ТипПодписчика));
			ИсключенныеПолучатели	= Новый Массив;
			ПроблемыОтправкиДоставляемыхУведомлений	 = Новый Массив;
			ОтправкаДоставляемыхУведомлений.Отправить(Уведомление, ОбщегоНазначенияПовторноеИспользование.ДанныеАутентификации(Выборка.ОперационнаяСистема, Выборка.Сертификат),ИсключенныеПолучатели,, ПроблемыОтправкиДоставляемыхУведомлений);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
