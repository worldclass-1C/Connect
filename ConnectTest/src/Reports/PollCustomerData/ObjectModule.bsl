
Procedure OnComposeResult(ResultDocument, DetailsData, StandardProcessing)
	StandardProcessing = False;
	
	parPoll = new DataCompositionParameter("Poll");
	For Each usrSet in ThisObject.SettingsComposer.UserSettings.Items Do
		If usrSet.Parameter = parPoll Then
			Poll = usrSet.Value;
			Break;
		EndIf;
	EndDo;
	
	Query = New Query;
	Query.Text = 
		"SELECT distinct
		|	Анкета.Респондент.userCode AS code
		|FROM
		|	Document.Анкета AS Анкета
		|WHERE
		|	Анкета.Posted
		|	AND Анкета.ШаблонАнкеты = &Poll
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|SELECT
		|	h.user AS user,
		|	h.password AS password,
		|	""http://"" + h.server + ""/"" + h.URL + ""requester/request"" AS url
		|FROM
		|	InformationRegister.holdingsConnectionsInformationSources AS h
		|WHERE
		|	h.holding IN
		|			(SELECT TOP 1
		|				НазначениеОпросов.chain.holding AS chainholding
		|			FROM
		|				Document.НазначениеОпросов AS НазначениеОпросов
		|			WHERE
		|				НазначениеОпросов.ШаблонАнкеты = &Poll
		|				AND НазначениеОпросов.Posted)
		|	AND h.language.Code = ""ru""";
	
	Query.SetParameter("Poll", Poll);
	
	ResQuery = Query.ExecuteBatch();
	
	userCodes = StrConcat(ResQuery[0].Unload().UnloadColumn("code"),""",""");
	
	queryText = "ВЫБРАТЬ
	|	Контрагенты.Код КАК Код,
	|	Контрагенты.Ссылка КАК Ссылка,
	|	Контрагенты.Ссылка.Наименование КАК ФИО,
	|	ПРЕДСТАВЛЕНИЕ(Контрагенты.Ссылка.Пол) КАК Пол,
	|	Контрагенты.Ссылка.ДатаРождения КАК ДатаРождения,
	|	РАЗНОСТЬДАТ(Контрагенты.Ссылка.ДатаРождения, &CurrentDate, ГОД) КАК Возраст,
	|	ПРЕДСТАВЛЕНИЕ(Контрагенты.ТипКлиента) КАК ТипКлиента,
	|	ПРЕДСТАВЛЕНИЕ(СтатусыКлиентовСрезПоследних.Статус) КАК Статус
	|ПОМЕСТИТЬ ВтКлиенты
	|ИЗ
	|	РегистрСведений.СтатусыКлиентов.СрезПоследних КАК СтатусыКлиентовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО (СтатусыКлиентовСрезПоследних.Контрагент = Контрагенты.Ссылка)
	|ГДЕ
	|	Контрагенты.Код В (""%1"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтКлиенты.Ссылка КАК Ссылка,
	|	ОстаткиПоКонтрактамОстатки.Контракт.ОсновнойКлубДоступа.Наименование КАК ОсновнойКлуб
	|ПОМЕСТИТЬ ВтОснКлуб
	|ИЗ
	|	ВтКлиенты КАК ВтКлиенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлиентыКонтракта.СрезПоследних КАК КлиентыКонтрактаСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеКонтрактов.СрезПоследних КАК ДанныеКонтрактовСрезПоследних
	|			ПО (ДанныеКонтрактовСрезПоследних.Контракт = КлиентыКонтрактаСрезПоследних.Контракт)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоКонтрактам.Остатки КАК ОстаткиПоКонтрактамОстатки
	|			ПО (ОстаткиПоКонтрактамОстатки.Контракт = КлиентыКонтрактаСрезПоследних.Контракт)
	|				И (ОстаткиПоКонтрактамОстатки.УслугаСегмент = НЕОПРЕДЕЛЕНО)
	|		ПО (КлиентыКонтрактаСрезПоследних.Клиент = ВтКлиенты.Ссылка)
	|ГДЕ
	|	ОстаткиПоКонтрактамОстатки.КоличествоОстаток > 0
	|	И КлиентыКонтрактаСрезПоследних.Актуальность
	|	И &CurrentDate МЕЖДУ ДанныеКонтрактовСрезПоследних.ДатаНачала И ДанныеКонтрактовСрезПоследних.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	данные.Ссылка КАК Ссылка,
	|	данные.КоличествоРасход КАК КоличествоРасход,
	|	ПРЕДСТАВЛЕНИЕ(СтажКлиентаСрезПоследних.ВидСтажа) КАК ВидСтажа,
	|	данные.КоличествоРасход - ЕСТЬNULL(СтажКлиентаСрезПоследних.АннулированныйСтаж, 0) КАК Стаж
	|ПОМЕСТИТЬ ВТСтаж
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВтКлиенты.Ссылка КАК Ссылка,
	|		СУММА(ОстаткиПоКонтрактамОбороты.КоличествоРасход) КАК КоличествоРасход
	|	ИЗ
	|		ВтКлиенты КАК ВтКлиенты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоКонтрактам.Обороты(, , , ) КАК ОстаткиПоКонтрактамОбороты
	|			ПО (ОстаткиПоКонтрактамОбороты.Контракт.Клиент = ВтКлиенты.Ссылка)
	|				И (ОстаткиПоКонтрактамОбороты.УслугаСегмент = НЕОПРЕДЕЛЕНО)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВтКлиенты.Ссылка) КАК данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтажКлиента.СрезПоследних КАК СтажКлиентаСрезПоследних
	|		ПО данные.Ссылка = СтажКлиентаСрезПоследних.Клиент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтКлиенты.Код КАК Код,
	|	ВтКлиенты.ФИО КАК ФИО,
	|	ВтОснКлуб.ОсновнойКлуб КАК ОсновнойКлубДоступа,
	|	ВТСтаж.Стаж КАК Стаж,
	|	ВТСтаж.ВидСтажа КАК ВидСтажа,
	|	ВтКлиенты.Пол КАК Пол,
	|	ВтКлиенты.ДатаРождения КАК ДатаРождения,
	|	ВтКлиенты.Возраст КАК Возраст,
	|	ВтКлиенты.Статус КАК Статус,
	|	ВтКлиенты.ТипКлиента КАК ТипКлиента
	|ИЗ
	|	ВтКлиенты КАК ВтКлиенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОснКлуб КАК ВтОснКлуб
	|		ПО ВтКлиенты.Ссылка = ВтОснКлуб.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтаж КАК ВТСтаж
	|		ПО ВтКлиенты.Ссылка = ВТСтаж.Ссылка";
	
	
	queryText= StrTemplate(queryText,userCodes);
	CurrentDate=CurrentDate();
	
	StrucAuth = new Structure("url,user,password");
	FillPropertyValues(StrucAuth,ResQuery[1].unload()[0]);
	
	Success = false;
	
	DataCWS = ЗапроситьНаСервере(queryText ,
			new Structure("CurrentDate,КонДата,ЭтоАгент",CurrentDate),
			,,Success ,StrucAuth);
			
	
	If Success and not DataCWS=Undefined Then 
		ResultDocument.Очистить();
		ReportBuilder = New ReportBuilder;
		ReportBuilder.DataSource=New DataSourceDescription(DataCWS[0]);
		ReportBuilder.Put(ResultDocument);
	EndIf;

EndProcedure

Функция ЗапроситьНаСервере(ТекстЗапроса,Параметры = Неопределено,ПолучитьСтруктуру = Ложь,ТекстОшибок, УспешноеПодключение = Ложь,НастройкиПодключения = Неопределено) Экспорт
	
	Рез = Неопределено;
	
	АдресСервиса	= НастройкиПодключения.url;
		
	Если Не ЗначениеЗаполнено(АдресСервиса)  Тогда
		ДобавитьОписаниеОшибки(ТекстОшибок,"Адрес сервиса не указан!");
		Возврат Рез
	КонецЕсли; 
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("Command",ТекстЗапроса);
	СтруктураЗапроса.Вставить("TakeStructure",ПолучитьСтруктуру);
	Если НЕ Параметры = Неопределено Тогда
		СтруктураЗапроса.Вставить("Parameters",Параметры);
	КонецЕсли; 
	ПараметрыПодключения = Новый Структура;
	Если РазобратьАдресСайта(АдресСервиса, ПараметрыПодключения,ТекстОшибок) Тогда
		ПараметрыПодключения.Вставить("Соединение", Новый HTTPСоединение(ПараметрыПодключения.Сервер, ,НастройкиПодключения.user , НастройкиПодключения.password , , 300, ?(ПараметрыПодключения.ЗащищенноеСоединение, Новый ЗащищенноеСоединениеOpenSSL(), Неопределено)));
	КонецЕсли;
	ЗапросHTTP = Новый HTTPЗапрос(ПараметрыПодключения.АдресСкрипта);
	ЗапросHTTP.Заголовки.Вставить("Content-Type", "application/json");
	
	ЗаписьJSON = новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON,СтруктураЗапроса,НазначениеТипаXML.Явное);
	СтрокаJSON  =ЗаписьJSON.Закрыть(); 
	ЗапросHTTP.УстановитьТелоИзСтроки(СтрокаJSON);
	
	Ошибка = Ложь;
	Попытка
		РезультатОтправки= ПараметрыПодключения.Соединение.ОтправитьДляОбработки(ЗапросHTTP);
		Ошибка = не РезультатОтправки.КодСостояния=200;
		Если Не Ошибка  Тогда
			УспешноеПодключение = Истина;
			СтрокаJSON = РезультатОтправки.ПолучитьТелоКакСтроку();
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
			РезДесериал = СериализаторXDTO.ПрочитатьJSON(ЧтениеJSON);
			Если ТипЗнч(РезДесериал) = Тип("Структура") Тогда
				Если РезДесериал.Error ="" Тогда
					Рез =РезДесериал.Data;
					Если Рез.Количество()=0 Тогда
						ДобавитьОписаниеОшибки(ТекстОшибок,"Ответ не содержит данных!");
					КонецЕсли; 
				Иначе
					ДобавитьОписаниеОшибки(ТекстОшибок,"Ошибка на стороне источника: "+РезДесериал.Error);
				КонецЕсли; 
			Иначе 
				ДобавитьОписаниеОшибки(ТекстОшибок,"Тип полученных данных не соответствует ожидаемому!");
			КонецЕсли; 
		Иначе 
			ДобавитьОписаниеОшибки(ТекстОшибок,"Код состояния: "+РезультатОтправки.КодСостояния);
		КонецЕсли;

	Исключение
		
		ДобавитьОписаниеОшибки(ТекстОшибок,ОписаниеОшибки());
	
		
	КонецПопытки;
	
	ЗапросHTTP = Неопределено;
	
	Если ЗначениеЗаполнено(ТекстОшибок) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстОшибок;
		Сообщение.Сообщить(); 
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

Функция РазобратьАдресСайта(Знач АдресСайта, НастройкиПодключения, ОписаниеОшибки = "") Экспорт
	
	АдресСайта = СокрЛП(АдресСайта); 
	
	Сервер = ""; 
	
	Порт = 0;
	
	АдресСкрипта = "";
	
	ЗащищенноеСоединение = Ложь;
	
	Если НЕ ПустаяСтрока(АдресСайта) Тогда
		
		АдресСайта = СтрЗаменить(АдресСайта, "\", "/");
		АдресСайта = СтрЗаменить(АдресСайта, " ", "");
		
		Если НРег(Лев(АдресСайта, 7)) = "http://" Тогда
			АдресСайта = Сред(АдресСайта, 8);
		ИначеЕсли НРег(Лев(АдресСайта, 8)) = "https://" Тогда
			АдресСайта = Сред(АдресСайта, 9);
			ЗащищенноеСоединение = Истина;
		КонецЕсли;
		
		ПозицияСлэша = Найти(АдресСайта, "/");
		
		Если ПозицияСлэша > 0 Тогда
			Сервер = Лев(АдресСайта, ПозицияСлэша - 1);
			АдресСкрипта = Прав(АдресСайта, СтрДлина(АдресСайта) - ПозицияСлэша);
		Иначе	
			Сервер = АдресСайта;
			АдресСкрипта = "";
		КонецЕсли;
		
		ПозицияДвоеточия = Найти(Сервер, ":");
		ПортСтрока = "0";
		Если ПозицияДвоеточия > 0 Тогда
			СерверСПортом = Сервер;
			Сервер = Лев(СерверСПортом, ПозицияДвоеточия - 1);
			ПортСтрока = Прав(СерверСПортом, СтрДлина(СерверСПортом) - ПозицияДвоеточия);
		КонецЕсли;
		
		Попытка
			
			Порт = Число(ПортСтрока);
			
		Исключение
			
			ДобавитьОписаниеОшибки(ОписаниеОшибки,
				ОписаниеИсключительнойОшибки(НСтр("ru = 'Не удалось получить номер порта: '")
					+ ПортСтрока + Символы.ПС
					+ НСтр("ru = 'Проверьте правильность ввода адреса сайта.'")));
				
			Возврат Ложь;
			
		КонецПопытки;
		
		Если Порт = 0 Тогда
			Порт = ?(ЗащищенноеСоединение, 443, 80);
		КонецЕсли;
		
	КонецЕсли;
	
	НастройкиПодключения.Вставить("Сервер"              , Сервер); 
	НастройкиПодключения.Вставить("Порт"                , Порт);
	НастройкиПодключения.Вставить("АдресСкрипта"        , АдресСкрипта);
	НастройкиПодключения.Вставить("ЗащищенноеСоединение", ЗащищенноеСоединение);
	
	Возврат Истина;
	
КонецФункции

Процедура ДобавитьОписаниеОшибки(Описание, Дополнение)
	
	Если ПустаяСтрока(Описание) Тогда
		
		Описание = Дополнение;
		
	Иначе
		
		Описание = Описание + Символы.ПС + Дополнение;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеИсключительнойОшибки(ТекстНачалаСообщения =  "", ТекстОкончанияСообщения = "")
	
	ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	
	ТекстСообщения = "";
	
	Если НЕ ПустаяСтрока(ТекстНачалаСообщения) Тогда
		
		ТекстСообщения = ТекстНачалаСообщения + Символы.ПС;
		
	КонецЕсли;
	
	ТекстСообщения = ТекстСообщения
		+ НСтр("ru = 'Произошла ошибка: '")
		+ ПодробноеПредставлениеОшибки;
	
	Если НЕ ПустаяСтрока(ТекстОкончанияСообщения) Тогда
		
		ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстОкончанияСообщения;
		
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции
